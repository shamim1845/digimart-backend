{"version":3,"file":"static/js/328.801c95b3.chunk.js","mappings":"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","sources":["components/account/profile/UpdateProfile.jsx","components/utils/formik/SelectBox.jsx","components/utils/formik/TextInput.jsx","components/utils/helperFunction/MediaUpload.js","components/utils/reUseableComponents/Buttons.jsx","components/utils/reUseableComponents/Title.jsx","components/utils/validationUtils/ValidationError.jsx","redux/user/userSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport MediaUpload from \"../../utils/helperFunction/MediaUpload\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Title from \"../../utils/reUseableComponents/Title\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserInfo } from \"../../../redux/user/userSelector\";\r\nimport { fetchAsyncUser } from \"../../../redux/user/userSlice\";\r\nimport Button from \"../../utils/reUseableComponents/Buttons\";\r\nimport TextInput from \"../../utils/formik/TextInput\";\r\nimport SelectBox from \"../../utils/formik/SelectBox\";\r\n\r\nconst MyProfile = () => {\r\n  const [isProfile, setIsProfile] = useState(false);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [btnDissable, setBtnDissable] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserInfo);\r\n\r\n  return (\r\n    <UpdateProfileContainer>\r\n      <Title\r\n        variant=\"h1\"\r\n        text=\"Update Profile\"\r\n        style={{ textAlign: \"center\" }}\r\n      />\r\n\r\n      <Content>\r\n        <UserImage>\r\n          <img\r\n            onClick={() => setIsProfile(true)}\r\n            src={user?.avatar?.url}\r\n            alt=\"profile_picture\"\r\n          />\r\n        </UserImage>\r\n\r\n        {isProfile && (\r\n          <AvatarPicker>\r\n            <label htmlFor=\"profilePic\">Profile Picture</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"profilePic\"\r\n              onChange={(e) => setProfilePic(e.target.files)}\r\n            />\r\n          </AvatarPicker>\r\n        )}\r\n        <br />\r\n        <Formik\r\n          initialValues={{\r\n            name: user?.name || \"\",\r\n            email: user?.email || \"\",\r\n            mobile: user?.mobile || \"\",\r\n            birthday: user?.birthday || \"\",\r\n            gender: user?.gender || \"\",\r\n          }}\r\n          validationSchema={yup.object({\r\n            name: yup\r\n              .string()\r\n              .required(\"Name is required.\")\r\n              .min(3, \"Name must have at least 3 characters.\"),\r\n            email: yup\r\n              .string()\r\n              .required(\"Email is required.\")\r\n              .email(\"Email must be a valid email.\"),\r\n            mobile: yup.string().max(11).required(\"Phone Number is required.\"),\r\n            birthday: yup.string().required(\"Date of birth is required.\"),\r\n            gender: yup.string().required(\"Gender  is required.\"),\r\n          })}\r\n          onSubmit={(values, { resetForm }) => {\r\n            setBtnDissable(true);\r\n            const { name, email, mobile, birthday, gender } = values;\r\n\r\n            function updateProfile(mediaUrls = []) {\r\n              const avatar = {\r\n                public_id: mediaUrls[0]?.public_id\r\n                  ? mediaUrls[0]?.public_id\r\n                  : user.avatar.public_id,\r\n                url: mediaUrls[0]?.secure_url\r\n                  ? mediaUrls[0]?.secure_url\r\n                  : user.avatar.url,\r\n              };\r\n\r\n              axios\r\n                .put(`/api/v1/profile/update`, {\r\n                  name,\r\n                  email,\r\n                  avatar,\r\n                  mobile,\r\n                  birthday,\r\n                  gender,\r\n                })\r\n                .then((res) => {\r\n                  if (res.status === 200 && res.data.success) {\r\n                    toast.success(\"Profile update Sucessfully.\");\r\n                    dispatch(fetchAsyncUser());\r\n\r\n                    setTimeout(() => {\r\n                      navigate(\"/account/myprofile\");\r\n                    }, 2000);\r\n                  } else {\r\n                    toast.info(res.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err.message);\r\n                  toast.error(err.message);\r\n                });\r\n            }\r\n\r\n            if (profilePic) {\r\n              MediaUpload(profilePic, \"user\").then((res) => {\r\n                updateProfile(res);\r\n              });\r\n            } else {\r\n              updateProfile();\r\n            }\r\n          }}\r\n          enableReinitialize\r\n        >\r\n          <Form>\r\n            <TextInput\r\n              label=\"Full Name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter your name\"\r\n            />\r\n            <TextInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <TextInput\r\n              label=\"Phone\"\r\n              type=\"tel\"\r\n              name=\"mobile\"\r\n              placeholder=\"Enter your phone number\"\r\n            />\r\n            <TextInput label=\"Birthday\" type=\"date\" name=\"birthday\" />\r\n            <SelectBox label=\"Gender\" name=\"gender\">\r\n              <option hidden>Choose</option>\r\n              <option value={\"male\"}>Male</option>\r\n              <option value={\"female\"}>Female</option>\r\n              <option value={\"other\"}>Other</option>\r\n            </SelectBox>\r\n            <br />\r\n            <Button\r\n              text={\"Update Profile\"}\r\n              type=\"submit\"\r\n              disabled={btnDissable}\r\n            />\r\n          </Form>\r\n        </Formik>\r\n      </Content>\r\n    </UpdateProfileContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n\r\nconst UpdateProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  padding: 2rem;\r\n  margin-bottom: 3rem;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--shadow-1);\r\n  padding: 5rem;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    box-shadow: var(--shadow-3);\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nconst UserImage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n  &:hover {\r\n  }\r\n\r\n  img {\r\n    width: 13rem;\r\n    height: 13rem;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AvatarPicker = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst SelectBox = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <SelectContainer>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </SelectContainer>\n  );\n};\n\nexport default SelectBox;\n\nconst SelectContainer = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  select {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    border-radius: 2px;\n    font-size: 1.3rem;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    }\n\n    option {\n      &:checked {\n        color: tomato;\n      }\n    }\n  }\n`;\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst TextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <InputGroup>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n\nconst InputGroup = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  input {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    font-size: 1.3rem;\n    border-radius: 2px;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n      color: #000;\n    }\n    &::placeholder {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import axios from \"axios\";\r\n\r\nconst MediaUpload = async (files, folder) => {\r\n  // Convert files Object to Array\r\n  const filesArr = [];\r\n  for (let key = 0; key < files.length; key++) {\r\n    filesArr.push(files[key]);\r\n  }\r\n\r\n  // Convert all files in base 64\r\n  const reader_files = filesArr.map((file) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (res) => {\r\n          const public_id = file.name.split(\".\")[0];\r\n\r\n          resolve({\r\n            base64: res.target.result,\r\n            options: {\r\n              public_id: public_id,\r\n              tags: [public_id],\r\n            },\r\n          });\r\n        };\r\n      } catch (error) {\r\n        console.error(error);\r\n        reject(error?.message);\r\n      }\r\n    });\r\n  });\r\n\r\n  const images = await Promise.all(reader_files);\r\n\r\n  // Upload images on Cloudinary\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"/api/v1/media/uploadImages\", {\r\n        images,\r\n        folder,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data.urls);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default MediaUpload;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = ({ text, children, ...rest }) => {\n  return (\n    <ButtonDefault {...rest}>\n      <span>{text}</span> {children}\n    </ButtonDefault>\n  );\n};\n\nexport default Button;\n\nconst ButtonDefault = styled.button`\n  border: none;\n  color: var(--text-primary);\n  background-color: tomato;\n  padding: 1rem 3rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #dd5a43;\n    color: #f1f1f1;\n  }\n  &:disabled {\n    background-color: #dd5a43d3;\n    cursor: not-allowed;\n    color: var(--text-primary);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = ({ variant = \"h1\", text, style }) => {\n  return (\n    <Container>\n      {variant === (\"h2\" || \"H2\") && <h2 style={style}>{text}</h2>}\n      {variant === (\"h3\" || \"H3\") && <h3 style={style}>{text}</h3>}\n      {variant === (\"h1\" || \"H1\") && <h1 style={style}>{text}</h1>}\n      {variant === (\"h4\" || \"H4\") && <h4 style={style}>{text}</h4>}\n    </Container>\n  );\n};\n\nexport default Title;\n\nconst Container = styled.div`\n  color: var(--text-primary);\n\n  h1 {\n    font-size: 2.4rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ValidationError = ({ message }) => {\n  return (\n    <Container className=\"error\">\n      <span>i</span> {message}\n    </Container>\n  );\n};\n\nexport default ValidationError;\n\nconst Container = styled.div`\n  font-size: 1.1rem;\n  padding: 0.5rem 0;\n  span {\n    font-style: italic;\n    color: tomato;\n    margin-right: 0.3rem;\n    font-weight: 700;\n    font-size: 1.1rem;\n  }\n`;\n","export const selectAuthenticated = (state) => state.user.authenticated;\nexport const selectUserInfo = (state) => state.user.userInfo;\nexport const selectCartItems = (state) => state.user.cartItems;\nexport const selectFavouriteItems = (state) => state.user.favouriteItems;\nexport const selectCurrency = (state) => state.user.currency;\n"],"names":["_user$avatar","_useState","useState","_useState2","_slicedToArray","isProfile","setIsProfile","_useState3","_useState4","profilePic","setProfilePic","_useState5","_useState6","btnDissable","setBtnDissable","navigate","useNavigate","dispatch","useDispatch","user","useSelector","selectUserInfo","_jsxs","UpdateProfileContainer","children","_jsx","Title","variant","text","style","textAlign","Content","UserImage","onClick","src","avatar","url","alt","AvatarPicker","htmlFor","type","name","onChange","e","target","files","Formik","initialValues","email","mobile","birthday","gender","validationSchema","yup","required","min","max","onSubmit","values","_ref","resetForm","updateProfile","_mediaUrls$","_mediaUrls$2","_mediaUrls$3","_mediaUrls$4","mediaUrls","arguments","length","undefined","public_id","secure_url","axios","then","res","status","data","success","toast","fetchAsyncUser","setTimeout","info","message","catch","err","console","log","error","MediaUpload","enableReinitialize","Form","TextInput","label","placeholder","SelectBox","hidden","value","Button","disabled","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","SelectContainer","id","_objectSpread","touched","ValidationError","InputGroup","_asyncToGenerator","_regeneratorRuntime","mark","_callee","folder","filesArr","key","reader_files","images","wrap","_context","prev","next","push","map","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","base64","result","options","tags","all","sent","abrupt","urls","stop","_x","_x2","apply","rest","ButtonDefault","button","_ref$variant","Container","className","selectAuthenticated","state","authenticated","userInfo","selectCurrency","currency"],"sourceRoot":""}