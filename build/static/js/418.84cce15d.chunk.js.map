{"version":3,"file":"static/js/418.84cce15d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/await-to-js/src/await-to-js.ts","../node_modules/easy-currencies/src/converter.ts","../node_modules/easy-currencies/src/index.ts","../node_modules/easy-currencies/src/parts/chainer.ts","../node_modules/easy-currencies/src/parts/config.ts","../node_modules/easy-currencies/src/parts/providers.ts","../node_modules/easy-currencies/src/parts/requester.ts","../node_modules/easy-currencies/src/parts/utils.ts"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @param { Promise } promise\n * @param { Object= } errorExt - Additional Information you can pass to the err object\n * @return { Promise }\n */\nexport function to<T, U = Error> (\n  promise: Promise<T>,\n  errorExt?: object\n): Promise<[U, undefined] | [null, T]> {\n  return promise\n    .then<[null, T]>((data: T) => [null, data])\n    .catch<[U, undefined]>((err: U) => {\n      if (errorExt) {\n        Object.assign(err, errorExt);\n      }\n\n      return [err, undefined];\n    });\n}\n\nexport default to;\n","import { fetchRates } from \"./parts/requester\";\nimport { Provider, ProviderReference } from \"./parts/providers\";\nimport { Config, ProxyConfiguration } from \"./parts/config\";\nexport { Chainer as Convert } from \"./parts/chainer\";\nimport _to from \"await-to-js\";\nimport axios from \"axios\";\n\n/**\n * A simple map object for rates\n *\n * @export\n * @interface rateObject\n */\nexport interface rateObject {\n  [currencyName: string]: number;\n}\n\n/**\n * Regular converter class definition.\n *\n * @export\n * @class Converter\n */\nexport class Converter {\n  /**\n   * Converter's main config object.\n   *\n   * @type {Config}\n   * @memberof Converter\n   */\n  config: Config;\n\n  /**\n   * Creates an instance of Converter.\n   * @param {(...ProviderReference[] | undefined[] | string[])} config\n   * @memberof Converter\n   */\n  constructor(...config: ProviderReference[] | undefined[] | string[]) {\n    this.config = new Config(...config);\n\n    // Forwarding config adder function (with the alternative handle)\n    this.add = this.config.add;\n    this.addProvider = this.config.add;\n\n    // Forwarding config multiple adder function (with the alternative handle)\n    this.addMultiple = this.config.addMultiple;\n    this.addMultipleProviders = this.config.addMultiple;\n\n    this.remove = this.config.remove;\n  }\n\n  /**\n   * Getters for active providers\n   *\n   * @readonly\n   * @type {Provider[]}\n   * @memberof Converter\n   */\n  get providers(): Provider[] {\n    return this.config.providers;\n  }\n  get active(): Provider[] {\n    return this.config.providers;\n  }\n\n  /*\n   Proxy function definitions\n   */\n  add: Config[\"add\"];\n  addProvider: Config[\"add\"];\n  addMultiple: Config[\"addMultiple\"];\n  addMultipleProviders: Config[\"addMultiple\"];\n  remove: Config[\"remove\"];\n\n  /**\n   * Method to set the proxy configuration.\n   * @param proxyConfiguration  The proxy configuration.\n   */\n  setProxyConfiguration = (proxyConfiguration: ProxyConfiguration) => {\n    this.config.setClient(axios.create({ proxy: proxyConfiguration }));\n  };\n\n  /**\n   * Conversion function (non chainable).\n   *\n   * @example\n   * const converter = new Converter()\n   * const converted = await converter.convert(15,\"USD\",\"EUR\")\n   * console.log(converted);\n   *\n   * @param {number} amount - amount to be converted\n   * @param {string} from - base currency\n   * @param {string} to - conversion currency\n   * @param {any} rates - conversion rates, if they were pre-fetched\n   * @returns {Promise<number>} - converted amount\n   */\n  convert = async (\n    amount: number,\n    from: string,\n    to: string,\n    rates: any = undefined\n  ): Promise<number> => {\n    // Returining conversion from provided rates\n    if (typeof rates !== \"undefined\") {\n      return this.convertRate(amount, to, rates);\n    }\n\n    //Fetching conversion rates from the active provider\n    const [err, data] = await _to(this.getRates(from, to, false));\n\n    if (err) {\n      throw err;\n    }\n\n    if (!data || Object.keys(data).length == 0) {\n      throw new Error(\"No data returned for rate fetch.\");\n    }\n\n    // Normalizing resulting rates data\n    return this.convertRate(amount, to, data);\n  };\n\n  /**\n   * Performs safe multiplication to get the result amount.\n   * @param {number} amount - amount to be converted\n   * @param {string} to - conversion currency\n   * @param {any} rates - conversion rates, if they were pre-fetched\n   * @returns\n   */\n  convertRate = (\n    amount: number,\n    to: string,\n    rates: any = undefined\n  ): number => {\n    if (!rates[to]) {\n      throw new Error(`No '${to}' present in rates: ${rates}`);\n    }\n\n    return amount * rates[to];\n  };\n\n  /**\n   * Rate fetch function\n   * @param {string} from - base currency\n   * @param {string} to - conversion currency\n   * @param {boolean} multiple - determines conversion mode\n   * @returns\n   */\n  getRates = async (\n    from: string,\n    to: string,\n    multiple: boolean = false\n  ): Promise<rateObject> => {\n    // Getting the current active provider\n    const provider = this.config.activeProvider();\n\n    // Getting the client\n    const client = this.config.getClient();\n\n    // Fetching conversion rates from the active provider.\n    const [err, data] = await (<any>_to(\n      fetchRates(client, provider, {\n        FROM: from,\n        TO: to,\n        multiple: multiple\n      })\n    ));\n\n    // error handling:\n    // if the error is not in the registered list of errors (is undefined), then throw.\n    // if the error is in the list, but there are no backup providers, then throw.\n    // if the error is in the list and there is a backup, log the error and continue.\n    if (!err) {\n      return provider.handler(data);\n    }\n\n    // unrecognized error\n    if (!err.handled) {\n      throw err.error;\n    }\n\n    // logging existing error\n    console.error(err.error);\n\n    if (this.config.providers.length <= 1) {\n      throw err.error;\n    }\n\n    // removing current provider from active list\n    this.config.remove(provider);\n\n    // Retrying...\n    return this.getRates(from, to, multiple);\n  };\n}\n","export { Converter, Convert } from \"./converter\";\nexport { providers } from \"./parts/providers\";\n","import { Converter, rateObject } from \"../converter\";\n\nimport __to from \"await-to-js\";\n\n/**\n * The chainable object interface.\n *\n * @interface chainableConverter\n */\ninterface chainableConverter {\n  from: (from: string) => chainableConverter;\n  to: (to: string) => Promise<number>;\n  fetch: () => Promise<chainableConverter>;\n  rates: rateObject;\n  amount: (val: number) => chainableConverter;\n}\n\n/**\n * Chained converter.\n * It defaults to the basic API provider, and does not require initialization.\n *\n * @example\n *  let value = await Convert(15).from(\"USD\").to(\"EUR\");\n *\n * @export\n * @param {number} amount - amount of currency to convert\n * @returns\n */\nexport function Chainer(amount: number | undefined = undefined) {\n  let _currentAmount: number | undefined = amount;\n  let _currentFrom: string | undefined = undefined;\n  let _currentTo: string | undefined = undefined;\n  let _currentRates: any | undefined = undefined;\n\n  // local converter\n  const _converter = new Converter();\n\n  /**\n   *  Return object construction, prepared for chaining.\n   */\n  const chainable: chainableConverter = {\n    from: _from,\n    to: _to,\n    fetch: _fetch,\n    get rates() {\n      return _currentRates;\n    },\n    amount: _amount\n  };\n\n  /**\n   * Chain member that fetches and caches the rates for the given currency.\n   *\n   * @returns chainable object\n   */\n  async function _fetch() {\n    // fetching rates for the base currency\n    _currentRates = await _converter.getRates(<string>_currentFrom, \"\", true);\n    return chainable;\n  }\n\n  // returning chainable\n  return chainable;\n\n  /**\n   * Chain member that sets the base currency\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _amount(val: number) {\n    _currentAmount = val;\n    return chainable;\n  }\n\n  /**\n   * Chain member that sets\n   *\n   * @param {string} from\n   * @returns chainable object\n   */\n  function _from(from: string) {\n    _currentFrom = from;\n    return chainable;\n  }\n\n  /**\n   * Final chain member (ends chain)\n   *\n   * @param {string} to - final currency\n   * @returns {number} - final converted amount\n   */\n  async function _to(to: string) {\n    _currentTo = to;\n\n    // converting\n    const result = await _converter.convert(\n      <number>_currentAmount,\n      <string>_currentFrom,\n      <string>_currentTo,\n      _currentRates\n    );\n\n    return result;\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport {\n  Provider,\n  providers,\n  resolveProvider,\n  UserDefinedProvider,\n  ProviderReference\n} from \"./providers\";\n\nimport { checkIfUserDefinedProvider } from \"./utils\";\n\n/**\n * Proxy configuration object.\n */\nexport interface ProxyConfiguration {\n  host: string;\n  port: number;\n  auth: { username: string; password: string };\n}\n\n/**\n * Config object that initializes with configuration data\n * passed in by the user.\n *\n * @export\n * @class Config\n */\nexport class Config {\n  /**\n   * Array of active curency API providers.\n   *\n   * @type {Provider[]}\n   * @memberof Config\n   */\n  private _active: Provider[];\n\n  /**\n   * Provider getter.\n   *\n   * @returns {Provider[]}\n   * @memberof Config\n   */\n  get providers(): Provider[] {\n    return this._active;\n  }\n\n  /**\n   * Active client.\n   */\n  private _client: AxiosInstance = axios.create();\n\n  /**\n   * Client setter.\n   * @param client  The client.\n   */\n  setClient = (client: AxiosInstance): void => {\n    this._client = client;\n  };\n\n  /**\n   * Client getter.\n   */\n  getClient = () => {\n    return this._client;\n  };\n\n  /**\n   * Provider setter (adder).\n   *\n   * @param {Provider[]} providers - providers to be added\n   * @param {boolean} [setActive=false] - should the new provider(s) be prioritized\n   * @returns {void}\n   * @memberof Config\n   */\n  private addProviders(providers: Provider[], setActive: boolean): void {\n    providers = providers.filter((p) => {\n      return !this._active.find((a) => a == p);\n    });\n\n    if (setActive) {\n      this._active.unshift(...providers);\n      return;\n    }\n    this._active.push(...providers);\n    return;\n  }\n\n  /**\n   * Adds a single new, user-defined provider to the list of providers.\n   *\n   * @param {string} name - the new provider name\n   * @param {Provider} provider - the new provider object\n   * @param {boolean} [setActive=false] - should the new provider(s) be prioritized\n   * @memberof Config\n   */\n  add = (\n    name: string,\n    provider: Provider,\n    setActive: boolean = false\n  ): void => {\n    this.addMultiple([{ name, provider }], setActive);\n  };\n\n  /**\n   * Adds multiple new, user-defined provider to the list of providers.\n   *\n   * @param {UserDefinedProvider[]} providers - providers to be added\n   * @param {boolean} [setActive=false] - should the new provider(s) be prioritized\n   * @memberof Config\n   */\n  addMultiple = (\n    newProviders: UserDefinedProvider[],\n    setActive: boolean = false\n  ): void => {\n    // Duplicate check\n    newProviders.forEach((p) => {\n      if (!checkIfUserDefinedProvider(p)) {\n        throw \"Invalid provider format!\";\n      }\n\n      if (providers[p.name]) {\n        throw \"A provider by this name is already registered!\";\n      }\n      providers[p.name] = p.provider;\n    });\n\n    // Adding provider to active providers\n    this.addProviders(\n      newProviders.map((p) => p.provider),\n      setActive\n    );\n  };\n\n  /**\n   * Removes a specific provider\n   * @param {Provider} provider - provider to be removed\n   * @memberof Config\n   */\n  remove = (provider: Provider): void => {\n    this._active = this._active.filter((p) => p != provider);\n  };\n\n  /**\n   * Returns the current provider\n   *\n   * @returns {Provider} - current provider\n   * @memberof Config\n   */\n  activeProvider(): Provider {\n    return this._active[0];\n  }\n\n  /**\n   * Creates an instance of Config.\n   * @param {(...ProviderReference[] | undefined[] | string[])} config\n   * @memberof Config\n   */\n  constructor(...config: ProviderReference[] | undefined[] | string[]) {\n    this._active = resolveProviders(...config);\n\n    // adding default fallback\n    this.addProviders([providers.ExchangeRateAPI], false);\n  }\n}\n\n/**\n * Config resolver that normalizes configuration input into the config interface\n *\n * @export\n * @param {(...ProviderReference[] | undefined[] | string[])} configuration\n * @returns {Provider[]}\n */\nexport function resolveProviders(\n  ...configuration: ProviderReference[] | undefined[] | string[]\n): Provider[] {\n  // resolve default if none provided.\n  if (typeof configuration === \"undefined\" || !configuration.length) {\n    return [providers.ExchangeRateAPI];\n  }\n\n  // checking for incorrect config types\n  if (\n    typeof configuration[0] !== \"object\" &&\n    typeof configuration[0] !== \"undefined\" &&\n    typeof configuration[0] !== \"string\"\n  ) {\n    throw \"You must either supply nothing or a config object (see the 'config' section to see the different APIs that can be used)\";\n  }\n\n  // returning single provider\n  if (typeof configuration[0] === \"string\") {\n    // constructing in initializationConfig object from string values\n    return [resolveProvider({ name: configuration[0], key: configuration[1] })];\n  }\n\n  // configuration is an array of providers\n  // casting\n  const initializationConfig = <ProviderReference[]>configuration;\n\n  // resolving all providers\n  return initializationConfig.map((provider) => resolveProvider(provider));\n}\n","/**\n * A map for provider information\n *\n * @interface Providers\n */\nexport interface Providers {\n  [name: string]: Provider;\n}\n\n/**\n * Provider error entry\n *\n * @export\n * @interface ProviderErrors\n */\nexport interface ProviderErrors {\n  [code: string]: string;\n}\n\n/**\n * Object that describes a user-defined provider.\n *\n * @export\n * @interface UserDefinedProvider\n */\nexport interface UserDefinedProvider {\n  name: string;\n  provider: Provider;\n}\n\n/**\n * Single provider interface.\n * Used to store pre-constructed query templates for various currency rate providers.\n * @export\n * @interface Provider\n */\nexport interface Provider {\n  /**\n   * An API key / Profile ID / Access key for a provider.\n   *\n   * @type {*}\n   * @memberof Provider\n   */\n  key: any;\n  /**\n   * Endpoint configuration object for a provider:\n   * The base template is the root of the access URL, with a place for access key in the form of %KEY% (if needed)\n   * The single template is used for single currency conversions, requires a %FROM% and a %TO% to be present.\n   * The multiple template is currently unused.\n   * @type {{ base: string; single: string; multiple: string }}\n   * @memberof Provider\n   */\n  endpoint: { base: string; single: string; multiple: string };\n  /**\n   * A function that returns a map of currencies from the data object returned by axios (response.data)\n   *\n   * @example\n   *  function(data) { //must return {currency1:rate1,curency2:rate2} in reference to the base currency.\n   *    return data.rates;\n   *  }\n   *\n   * @type {Function}\n   * @memberof Provider\n   */\n  handler: Function;\n  /**\n   * A map of possible errors and their respective messages\n   *\n   * @type {*}\n   * @memberof Provider\n   */\n  errors: ProviderErrors;\n  /**\n   * A unique method to resolve errors, if any.\n   * Some APIs return their errors via success responses, others via HTTP failures.\n   * These two modes are mutually exclusive; The data passed to the errorHandler is:\n   * the response.data object, in the case of 'success' failures\n   * the response object, in the case of Axios errors (HTTP failures)\n   *\n   * @type {Function}\n   * @memberof Provider\n   */\n  errorHandler: Function;\n}\n\n/**\n * An interface for an object that is used to configure providers\n *\n * @export\n * @interface ProviderReference\n */\nexport interface ProviderReference {\n  name: string;\n  key: any;\n}\n\n/**\n * A function that constructs provider based on raw input data.\n *\n * @export\n * @param {ProviderReference} provider object containing provider name and api key\n * @returns {Provider} constructed provider\n */\nexport function resolveProvider(provider: ProviderReference): Provider {\n  const existentProvider = providers[provider.name];\n  if (!existentProvider) {\n    throw \"No provider with this name. Please use a provider from the supported providers list.\";\n  }\n\n  // attaching key\n  existentProvider.key = provider.key;\n  return existentProvider;\n}\n\n/**\n * Provider map initialization\n */\nexport const providers: Providers = {\n  ExchangeRateAPI: {\n    endpoint: {\n      base: \"https://api.exchangerate-api.com/v4/latest/\",\n      single: \"%FROM%\",\n      multiple: \"%FROM%\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      return data.rates;\n    },\n    errors: { 400: \"Malformed query.\", 404: \"Currency not found\" },\n    errorHandler: function (data: any) {\n      return data.status;\n    }\n  },\n  ExchangeRatesAPIIO: {\n    endpoint: {\n      base: \"http://api.exchangeratesapi.io/latest?access_key=%KEY%\",\n      single: \"&base=%FROM%&symbols=%TO%\",\n      multiple: \"&base=%FROM%\"\n    },\n    errors: {\n      105: \"A paid plan is required in order to use other base currencies!\",\n      101: \"Invalid API key!\",\n      201: \"Invalid base currency.\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      return data.rates;\n    },\n    errorHandler: function (data: any) {\n      return data.status;\n    }\n  },\n  CurrencyLayer: {\n    endpoint: {\n      base: \"http://apilayer.net/api/live?access_key=%KEY%\",\n      single: \"&source=%FROM%\",\n      multiple: \"&source=%FROM%&currencies=%TO%\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      const map = {} as any;\n      Object.keys(data.quotes).map((key) => {\n        map[key.slice(3)] = data.quotes[key];\n      });\n      return map;\n    },\n    errors: {\n      105: \"A paid plan is required in order to use CurrencyLayer (base currency use not allowed)\",\n      101: \"Invalid API key!\",\n      201: \"Invalid base currency.\",\n      106: \"No results.\"\n    },\n    errorHandler: function (data: any) {\n      return data.error ? data.error.code : null;\n    }\n  },\n  OpenExchangeRates: {\n    endpoint: {\n      base: \"https://openexchangerates.org/api/latest.json?app_id=%KEY%\",\n      single: \"&base=%FROM%\",\n      multiple: \"&base=%FROM%\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      return data.rates;\n    },\n    errors: {\n      401: \"Invalid API key!\"\n    },\n    errorHandler: function (data: any) {\n      return data.status;\n    }\n  },\n  AlphaVantage: {\n    endpoint: {\n      base: \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&apikey=%KEY%\",\n      single: \"&from_currency=%FROM%&to_currency=%TO%\",\n      multiple: \"\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      const map = {} as any;\n      const o = data[Object.keys(data)[0]];\n      map[o[\"3. To_Currency Code\"]] = o[\"5. Exchange Rate\"];\n      return map;\n    },\n    errors: {\n      503: \"Invalid API key or Malformed query.\"\n    },\n    errorHandler: function (data: any) {\n      return data[\"Error Message\"] ? 503 : false;\n    }\n  },\n  Fixer: {\n    endpoint: {\n      base: \"http://data.fixer.io/api/latest?access_key=%KEY%\",\n      single: \"&base=%FROM%&symbols=%TO%\",\n      multiple: \"&base=%FROM%\"\n    },\n    key: undefined,\n    handler: function (data: any) {\n      return data.rates;\n    },\n    errors: {\n      105: \"A paid plan is required in order to use Fixer.io (base currency use not allowed)\",\n      101: \"Invalid API key!\",\n      201: \"Invalid base currency.\"\n    },\n    errorHandler: function (data: any) {\n      return data.error ? data.error.code : null;\n    }\n  }\n};\n","import { AxiosError, AxiosInstance } from \"axios\";\nimport { Provider } from \"./providers\";\nimport to from \"await-to-js\";\n\n/**\n * Query interface, used to interact with the requester.\n *\n * @export\n * @interface Query\n */\nexport interface Query {\n  FROM: string;\n  TO: string;\n  multiple: boolean;\n}\n\n/**\n * The fetchRates function, used for fetching currency conversion rates.\n *\n * @export\n * @param {AxiosInstance} client - client to be used for the request\n * @param {Provider} provider - provider from which the quotes will be fetched\n * @param {Query} query - the query\n * @returns {Promise<any>} - a result promise\n */\nexport async function fetchRates(\n  client: AxiosInstance,\n  provider: Provider,\n  query: Query\n): Promise<any> {\n  const [err, result] = (await to(client.get(formatUrl(provider, query)))) as [\n    AxiosError,\n    any\n  ];\n\n  // resolving error\n  const error = provider.errorHandler(err ? err.response : result.data);\n\n  // returning either the meaning of the error (if registered in provider's definition), or the error itself.\n  if (error) {\n    throw provider.errors[error]\n      ? { handled: true, error: provider.errors[error] }\n      : { handled: false, error };\n  }\n\n  return result.data;\n}\n\n/**\n * URL formatting function\n *\n * @param {Provider} provider - provider against which the request will be executed\n * @param {Query} query - the query\n * @returns {string} - formatted GET url string.\n */\nfunction formatUrl(provider: Provider, query: Query): string {\n  // if (query.multiple) {\n  //   return (provider.endpoint.base + provider.endpoint.multiple)\n  //     .replace(\"%FROM%\", query.FROM)\n  //     .replace(\"%KEY%\", provider.key || \"\");\n  // }\n\n  // inserting base currency, final currency, and key (if needed)\n  return (provider.endpoint.base + provider.endpoint.single)\n    .replace(\"%FROM%\", query.FROM)\n    .replace(\"%TO%\", query.TO)\n    .replace(\"%KEY%\", provider.key || \"\");\n}\n","import { UserDefinedProvider, Provider } from \"./providers\";\n\n/**\n * Utility for typechecking UserDefinedProvider objects\n *\n * @export\n * @param {(UserDefinedProvider | any)} userDefinedProvider - The UserDefinedProvider object to be checked\n * @returns {u is UserDefinedProvider}\n */\nexport function checkIfUserDefinedProvider(\n  userDefinedProvider: UserDefinedProvider | any\n): userDefinedProvider is UserDefinedProvider {\n  return (\n    (userDefinedProvider as UserDefinedProvider).name !== undefined &&\n    checkIfProvider((userDefinedProvider as UserDefinedProvider).provider)\n  );\n}\n\n/**\n * Utility for typechecking Provider objects\n *\n * @export\n * @param {(Provider | any)} provider - The Provider object to be checked\n * @returns {p is Provider}\n */\nexport function checkIfProvider(\n  provider: Provider | any\n): provider is Provider {\n  return (\n    (provider as Provider).endpoint !== undefined &&\n    (provider as Provider).errorHandler !== undefined &&\n    (provider as Provider).errors !== undefined &&\n    (provider as Provider).handler !== undefined &&\n    (provider as Provider).key !== undefined\n  );\n}\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","instance","Constructor","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","Function","bind","prototype","arguments","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","_i","_s","_e","_arr","_n","_d","next","done","value","err","_setPrototypeOf","o","p","__proto__","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","minLen","n","toString","slice","constructor","name","test","promise","errorExt","then","data","catch","assign","undefined","Chainer","Converter","setProxyConfiguration","proxyConfiguration","config","setClient","create","proxy","convert","amount","to","rates","this","convertRate","getRates","keys","Error","multiple","provider","activeProvider","client","getClient","fetchRates","FROM","TO","handler","handled","error","console","providers","remove","Config","add","addProvider","addMultiple","addMultipleProviders","_currentAmount","_currentFrom","_currentTo","_currentRates","_converter","chainable","_from","_to","fetch","_fetch","_amount","val","result","_client","setActive","newProviders","forEach","checkIfUserDefinedProvider","addProviders","map","_active","filter","resolveProviders","ExchangeRateAPI","find","unshift","configuration","resolveProvider","initializationConfig","existentProvider","endpoint","base","single","errors","errorHandler","status","ExchangeRatesAPIIO","CurrencyLayer","quotes","code","OpenExchangeRates","AlphaVantage","Fixer","formatUrl","query","replace","get","response","checkIfProvider","userDefinedProvider"],"sourceRoot":""}