{"version":3,"file":"static/js/118.2ddb1b3b.chunk.js","mappings":"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","sources":["components/products/ProductCard.jsx","components/utils/PageContainer.jsx","components/utils/constants/currencyConstants.js","components/utils/customHooks/useCartHandler.js","components/utils/fetchUtils/Error.jsx","components/utils/fetchUtils/NotFound.jsx","components/utils/helperFunction/currencyConverter.js","components/utils/reUseableComponents/Currency.jsx","components/utils/reUseableComponents/Title.jsx","redux/api/cart/cartAPI.js","redux/api/favourite/favouriteAPI.js","redux/api/products/productsAPI.js","redux/user/userSelector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Rating } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport useCartHandler from \"../utils/customHooks/useCartHandler\";\r\nimport Currency from \"../utils/reUseableComponents/Currency\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  // Custom hook for cart handling\r\n  const { quantity, addToCartHandler } = useCartHandler(product?._id);\r\n\r\n  // Effect for set quantity from cart\r\n  useEffect(() => {\r\n    if (quantity) {\r\n      setValue(quantity);\r\n    }\r\n  }, [quantity]);\r\n\r\n  // form submit handler\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addToCartHandler(value);\r\n    setShowInput(false);\r\n  };\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Link to={`/products/${product._id}`}>\r\n        <CardHead>\r\n          <img src={product.images[0].url} alt=\"\" />\r\n        </CardHead>\r\n        <CardBody>\r\n          <div className=\"price_rating\">\r\n            <div className=\"price\">\r\n              <Currency price={product?.price} />\r\n            </div>\r\n            <Rating\r\n              name=\"half-rating-read\"\r\n              value={product.avgRatings}\r\n              precision={0.1}\r\n              readOnly\r\n              style={{ fontSize: \"2rem\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            {product.name.length > 35 ? (\r\n              <p>{`${product.name.slice(0, 50)}...`}</p>\r\n            ) : (\r\n              <p>{product.name}</p>\r\n            )}\r\n          </div>\r\n        </CardBody>\r\n      </Link>\r\n      <AddToCartBtn quantity={quantity}>\r\n        <>\r\n          {quantity > 0 ? (\r\n            <div className=\"btnContainer\">\r\n              <button\r\n                className=\"removeBtn\"\r\n                onClick={() => addToCartHandler(quantity - 1)}\r\n                disabled={quantity === 0}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-dash\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\r\n                </svg>\r\n              </button>\r\n              <div className=\"textElement\">\r\n                {showInput ? (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <input\r\n                      name=\"quantity\"\r\n                      type=\"number\"\r\n                      max={product?.stock}\r\n                      min={1}\r\n                      value={value}\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                  </form>\r\n                ) : (\r\n                  <span\r\n                    title=\"Double-click to set the quantity\"\r\n                    onDoubleClick={() => setShowInput(true)}\r\n                  >\r\n                    {quantity}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <button\r\n                className=\"addBtn\"\r\n                disabled={quantity >= product?.stock}\r\n                onClick={() => addToCartHandler(quantity + 1)}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-plus\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"btnContainer emptyBtnContainer\"\r\n              onClick={() => addToCartHandler(quantity + 1)}\r\n            >\r\n              <div className=\"textElement\">\r\n                <span>{quantity > 0 ? quantity : \"Add\"}</span>\r\n              </div>\r\n              <div>\r\n                <button className=\"addBtn\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-plus\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      </AddToCartBtn>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductCard);\r\n\r\nconst CardContainer = styled.div`\r\n  background: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 40rem;\r\n  transition: all 0.3s ease-in-out;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  box-shadow: var(--shadow-1);\r\n\r\n  &:hover {\r\n    transform: translateY(-0.6rem);\r\n    box-shadow: var(--shadow);\r\n  }\r\n`;\r\n\r\nconst CardHead = styled.div`\r\n  height: 25rem;\r\n  padding: 1rem 2rem 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .price_rating {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .price {\r\n      color: var(--text-primary);\r\n      font-size: 1.6rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    color: var(--text-secondary);\r\n    font-size: 1.4rem;\r\n    font-weight: 400;\r\n    margin: 0.5rem 0;\r\n    line-height: 1.25;\r\n  }\r\n`;\r\n\r\nconst AddToCartBtn = styled.div`\r\n  padding: 1rem 2rem 2.5rem;\r\n\r\n  .btnContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: ${({ quantity }) =>\r\n      quantity > 0 ? \"tomato\" : \"#eff0f5\"};\r\n    border-radius: 0.5rem;\r\n    overflow: hidden;\r\n\r\n    button {\r\n      border: none;\r\n      outline: none;\r\n      padding: 1rem;\r\n      background: none;\r\n      cursor: pointer;\r\n      transition: background-color 0.2s ease-in-out;\r\n\r\n      &:hover {\r\n        background-color: #df6550;\r\n      }\r\n\r\n      svg {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        fill: ${({ quantity }) => (quantity > 0 ? \"#fff\" : \"\")};\r\n      }\r\n    }\r\n\r\n    .textElement {\r\n      color: ${({ quantity }) => (quantity > 0 ? \"#fff\" : \"\")};\r\n\r\n      form {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        user-select: none;\r\n\r\n        input {\r\n          width: 100%;\r\n          max-width: 8rem;\r\n          border: none;\r\n          outline: none;\r\n          padding-left: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .emptyBtnContainer {\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: tomato;\r\n      color: #fff;\r\n\r\n      button {\r\n        background-color: #df6550;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    div {\r\n      flex: 1;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      height: 100%;\r\n    }\r\n\r\n    .addBtn {\r\n      background-color: #e0e1e4;\r\n      height: 100%;\r\n      transition: color 0.2s ease-in-out;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PageContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default PageContainer;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 0 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 768px) {\r\n    padding: 0 2rem;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n","export const currencyConstants = [\n  {\n    name: \"USD\",\n    icon: \"$\",\n  },\n  {\n    name: \"BDT\",\n    icon: \"৳\",\n  },\n  {\n    name: \"INR\",\n    icon: \"₹\",\n  },\n];\n","import { useEffect, useState } from \"react\";\nimport {\n  useAddToCartMutation,\n  useGetMyCartListQuery,\n  useRemoveFromCartMutation,\n} from \"../../../redux/api/cart/cartAPI\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRemoveToFavouriteListMutation } from \"../../../redux/api/favourite/favouriteAPI\";\n\nconst useCartHandler = (productId) => {\n  const [quantity, setQuantity] = useState(0);\n\n  const navigate = useNavigate();\n\n  // get my cart list\n  const { isSuccess, data } = useGetMyCartListQuery();\n  // find item already exist or not in cart list, if exist set cart quantity\n  useEffect(() => {\n    if (isSuccess) {\n      const item = data?.carts?.find(\n        (item) => item?.product?._id === productId\n      );\n      if (item) {\n        setQuantity(item?.quantity);\n      } else {\n        setQuantity(0);\n      }\n    }\n  }, [isSuccess, data?.carts, productId]);\n\n  // Mutation for add to cart\n  const [addToCart] = useAddToCartMutation();\n  // Mutation for remove to cart\n  const [removeFromCart] = useRemoveFromCartMutation();\n  // Remove  from favourite mutation\n  const [removeFromFavouriteList] = useRemoveToFavouriteListMutation();\n\n  // Add to cart handler\n  const addToCartHandler = (qty) => {\n    if (qty === 0) {\n      removeFromCart({ productId })\n        .unwrap()\n        .then((res) => {\n          toast.info(res?.message);\n        })\n        .catch((err) => {\n          toast.error(err?.data?.message);\n        });\n    } else {\n      addToCart({ productId, quantity: qty })\n        .unwrap()\n        .then((res) => {\n          toast.success(res?.message);\n        })\n        .catch((err) => {\n          toast.error(err?.data?.message);\n          if (err?.status === 401) {\n            setTimeout(() => {\n              navigate(\"/login\");\n              window.scrollTo(0, 0);\n            }, 2000);\n          }\n        });\n    }\n  };\n\n  // Add to cart handler\n  const addToCartFromFavouriteHandler = () => {\n    addToCart({ productId, quantity: 1 })\n      .unwrap()\n      .then((res) => {\n        toast.success(res?.message);\n        removeFromFavouriteList({ productId });\n      })\n      .catch((err) => {\n        toast.error(err.data?.message);\n      });\n  };\n\n  // Remove from cart handler\n  const removeFromCartHandler = () => {\n    removeFromCart({ productId })\n      .unwrap()\n      .then((res) => {\n        toast.info(res?.message);\n      })\n      .catch((err) => {\n        toast.error(err?.data?.message);\n      });\n  };\n\n  return {\n    quantity,\n    addToCartHandler,\n    addToCartFromFavouriteHandler,\n    removeFromCartHandler,\n  };\n};\n\nexport default useCartHandler;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Error = ({ text = \"There was an error!\", style }) => {\n  return <Container style={{ color: \"red\", ...style }}>{text}</Container>;\n};\n\nexport default Error;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"../reUseableComponents/Title\";\n\nconst NotFound = ({ style, text }) => {\n  return (\n    <Container style={style}>\n      <Title variant=\"h1\" text=\"Oops!\" />\n      <p>{text}</p>\n    </Container>\n  );\n};\n\nexport default NotFound;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Converter } from \"easy-currencies\";\n\nconst currencyConverter = async ({ amount, from, to }) => {\n  const api_key = process.env.REACT_APP_OPENEXCHANGE_API_KEY;\n  const converter = new Converter(\"OpenExchangeRates\", api_key);\n\n  const value = await converter.convert(amount, from, to);\n\n  return value.toFixed(2);\n};\n\nexport default currencyConverter;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrency } from \"../../../redux/user/userSelector\";\nimport currencyConverter from \"../helperFunction/currencyConverter\";\nimport { currencyConstants } from \"../constants/currencyConstants\";\n\nconst Currency = ({ price }) => {\n  const [amount, setAmount] = useState(null);\n\n  const currency = useSelector(selectCurrency);\n\n  // convert currency\n  useEffect(() => {\n    currencyConverter({ amount: price, from: \"USD\", to: currency }).then(\n      (res) => {\n        setAmount(res);\n      }\n    );\n  }, [currency, price]);\n\n  // find selected currency\n  const selectedCurrency = currencyConstants.find(\n    (currCurrency) => currCurrency.name === currency\n  );\n\n  return (\n    <>\n      <span> {selectedCurrency?.icon}</span>\n      <span> {amount}</span>\n    </>\n  );\n};\n\nexport default Currency;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = ({ variant = \"h1\", text, style }) => {\n  return (\n    <Container>\n      {variant === (\"h2\" || \"H2\") && <h2 style={style}>{text}</h2>}\n      {variant === (\"h3\" || \"H3\") && <h3 style={style}>{text}</h3>}\n      {variant === (\"h1\" || \"H1\") && <h1 style={style}>{text}</h1>}\n      {variant === (\"h4\" || \"H4\") && <h4 style={style}>{text}</h4>}\n    </Container>\n  );\n};\n\nexport default Title;\n\nconst Container = styled.div`\n  color: var(--text-primary);\n\n  h1 {\n    font-size: 2.4rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n  }\n`;\n","import apiCreator from \"../apiCreator\";\r\n\r\nconst cartAPI = apiCreator.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getMyCartList: builder.query({\r\n      query: () => ({\r\n        url: `cart`,\r\n      }),\r\n      providesTags: [\"getMyCartList\"],\r\n    }),\r\n\r\n    addToCart: builder.mutation({\r\n      query: (data) => ({\r\n        url: `cart/add`,\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"getMyCartList\"],\r\n    }),\r\n\r\n    removeFromCart: builder.mutation({\r\n      query: (data) => ({\r\n        url: `cart/remove`,\r\n        method: \"DELETE\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"getMyCartList\"],\r\n    }),\r\n    removeAllFromCart: builder.mutation({\r\n      query: () => ({\r\n        url: `cart/remove/all`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"getMyCartList\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMyCartListQuery,\r\n  useAddToCartMutation,\r\n  useRemoveFromCartMutation,\r\n  useRemoveAllFromCartMutation,\r\n} = cartAPI;\r\n","import apiCreator from \"../apiCreator\";\r\n\r\nconst favouriteAPI = apiCreator.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getMyFavouriteList: builder.query({\r\n      query: () => ({\r\n        url: `favourite`,\r\n      }),\r\n      providesTags: [\"getMyFavouriteList\"],\r\n    }),\r\n\r\n    addToFavouriteList: builder.mutation({\r\n      query: (data) => ({\r\n        url: `favourite/add`,\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"getMyFavouriteList\"],\r\n    }),\r\n\r\n    removeToFavouriteList: builder.mutation({\r\n      query: (data) => ({\r\n        url: `favourite/remove`,\r\n        method: \"DELETE\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"getMyFavouriteList\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMyFavouriteListQuery,\r\n  useAddToFavouriteListMutation,\r\n  useRemoveToFavouriteListMutation,\r\n} = favouriteAPI;\r\n","import apiCreator from \"../apiCreator\";\n\nconst productsAPI = apiCreator.injectEndpoints({\n  endpoints: (builder) => ({\n    getProducts: builder.query({\n      query: (query) => ({\n        url: `products?${query}`,\n      }),\n    }),\n    getProduct: builder.query({\n      query: (id) => ({\n        url: `product/${id}`,\n      }),\n    }),\n    deleteProduct: builder.mutation({\n      query: (id) => ({\n        url: `admin/product/${id}`,\n        method: \"DELETE\",\n      }),\n    }),\n    getNewArivalsCategories: builder.query({\n      query: () => ({\n        url: `products/new-arrivals-categories`,\n      }),\n    }),\n    getNewArivals: builder.query({\n      query: ({ category, currentPage }) => ({\n        url: `products/new-arrivals?category=${category}&page=${currentPage}`,\n      }),\n    }),\n    createProduct: builder.mutation({\n      query: (product) => ({\n        url: \"admin/product/new\",\n        method: \"POST\",\n        body: product,\n      }),\n    }),\n    updateProduct: builder.mutation({\n      query: ({ id, product }) => ({\n        url: `admin/product/${id}`,\n        method: \"PUT\",\n        body: product,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetProductsQuery,\n  useGetProductQuery,\n  useDeleteProductMutation,\n  useGetNewArivalsCategoriesQuery,\n  useGetNewArivalsQuery,\n  useCreateProductMutation,\n  useUpdateProductMutation,\n} = productsAPI;\n","export const selectAuthenticated = (state) => state.user.authenticated;\nexport const selectUserInfo = (state) => state.user.userInfo;\nexport const selectCartItems = (state) => state.user.cartItems;\nexport const selectFavouriteItems = (state) => state.user.favouriteItems;\nexport const selectCurrency = (state) => state.user.currency;\n"],"names":["ProductCard","_ref","product","_useState","useState","_useState2","_slicedToArray","showInput","setShowInput","_useState3","_useState4","value","setValue","_useCartHandler","useCartHandler","_id","quantity","addToCartHandler","useEffect","_jsxs","CardContainer","children","Link","to","concat","_jsx","CardHead","src","images","url","alt","CardBody","className","Currency","price","Rating","name","avgRatings","precision","readOnly","style","fontSize","length","slice","AddToCartBtn","_Fragment","onClick","disabled","xmlns","width","height","fill","viewBox","d","onSubmit","e","preventDefault","type","max","stock","min","onChange","target","title","onDoubleClick","React","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_ref2","_ref3","_ref4","Container","currencyConstants","icon","productId","setQuantity","navigate","useNavigate","_useGetMyCartListQuer","useGetMyCartListQuery","isSuccess","data","_data$carts","item","carts","find","_item$product","_useAddToCartMutation","useAddToCartMutation","addToCart","_useRemoveFromCartMut","useRemoveFromCartMutation","removeFromCart","_useRemoveToFavourite","useRemoveToFavouriteListMutation","removeFromFavouriteList","qty","unwrap","then","res","toast","info","message","catch","err","_err$data","error","success","_err$data2","status","setTimeout","window","scrollTo","addToCartFromFavouriteHandler","_err$data3","removeFromCartHandler","_err$data4","_ref$text","text","_objectSpread","color","Title","variant","currencyConverter","_asyncToGenerator","_regeneratorRuntime","mark","_callee","amount","from","converter","wrap","_context","prev","next","process","Converter","convert","sent","abrupt","toFixed","stop","_x","apply","arguments","setAmount","currency","useSelector","selectCurrency","selectedCurrency","currCurrency","_ref$variant","cartAPI","apiCreator","injectEndpoints","endpoints","builder","getMyCartList","query","providesTags","mutation","method","body","invalidatesTags","removeAllFromCart","useRemoveAllFromCartMutation","favouriteAPI","getMyFavouriteList","addToFavouriteList","removeToFavouriteList","useGetMyFavouriteListQuery","useAddToFavouriteListMutation","productsAPI","getProducts","getProduct","id","deleteProduct","getNewArivalsCategories","getNewArivals","category","currentPage","createProduct","updateProduct","useGetProductsQuery","useGetProductQuery","useDeleteProductMutation","useGetNewArivalsCategoriesQuery","useGetNewArivalsQuery","useCreateProductMutation","useUpdateProductMutation","selectAuthenticated","state","user","authenticated","selectUserInfo","userInfo"],"sourceRoot":""}