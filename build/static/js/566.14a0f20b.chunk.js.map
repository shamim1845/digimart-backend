{"version":3,"file":"static/js/566.14a0f20b.chunk.js","mappings":"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","sources":["components/Auth/ForgotPassword.js","components/utils/formik/TextInput.jsx","components/utils/reUseableComponents/Buttons.jsx","components/utils/reUseableComponents/Title.jsx","components/utils/validationUtils/ValidationError.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport axiox from \"axios\";\r\nimport * as yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../utils/reUseableComponents/Buttons\";\r\nimport TextInput from \"../utils/formik/TextInput\";\r\nimport { Form, Formik } from \"formik\";\r\nimport Title from \"../utils/reUseableComponents/Title\";\r\n\r\nconst ForgotPassword = () => {\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <Title text=\"Forgot Password\" />\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n          }}\r\n          validationSchema={yup.object({\r\n            email: yup\r\n              .string()\r\n              .required(\"Email is required.\")\r\n              .email(\"Email must be a valid email.\"),\r\n          })}\r\n          onSubmit={(values, { resetForm }) => {\r\n            const { email } = values;\r\n\r\n            axiox\r\n              .post(`/api/v1/password/forgot`, {\r\n                email,\r\n              })\r\n              .then((res) => {\r\n                if (res.status === 200) {\r\n                  toast.success(res.data.message);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                toast.error(\r\n                  err?.response?.data?.message || \"Invalid email address.\"\r\n                );\r\n                console.log(err);\r\n              })\r\n              .finally(() => {\r\n                resetForm();\r\n              });\r\n          }}\r\n        >\r\n          <Form>\r\n            <TextInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter Your Email\"\r\n            />\r\n\r\n            <Button type=\"submit\" text=\"Submit\" />\r\n          </Form>\r\n        </Formik>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 50rem;\r\n  margin: 5rem auto;\r\n  padding: 1rem;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    margin: 2rem auto;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  padding: 3rem;\r\n  box-shadow: var(--shadow-1);\r\n  border-radius: 5px;\r\n\r\n  form {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst TextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <InputGroup>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n\nconst InputGroup = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  input {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    font-size: 1.3rem;\n    border-radius: 2px;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n      color: #000;\n    }\n    &::placeholder {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = ({ text, children, ...rest }) => {\n  return (\n    <ButtonDefault {...rest}>\n      <span>{text}</span> {children}\n    </ButtonDefault>\n  );\n};\n\nexport default Button;\n\nconst ButtonDefault = styled.button`\n  border: none;\n  color: var(--text-primary);\n  background-color: tomato;\n  padding: 1rem 3rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #dd5a43;\n    color: #f1f1f1;\n  }\n  &:disabled {\n    background-color: #dd5a43d3;\n    cursor: not-allowed;\n    color: var(--text-primary);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = ({ variant = \"h1\", text, style }) => {\n  return (\n    <Container>\n      {variant === (\"h2\" || \"H2\") && <h2 style={style}>{text}</h2>}\n      {variant === (\"h3\" || \"H3\") && <h3 style={style}>{text}</h3>}\n      {variant === (\"h1\" || \"H1\") && <h1 style={style}>{text}</h1>}\n      {variant === (\"h4\" || \"H4\") && <h4 style={style}>{text}</h4>}\n    </Container>\n  );\n};\n\nexport default Title;\n\nconst Container = styled.div`\n  color: var(--text-primary);\n\n  h1 {\n    font-size: 2.4rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ValidationError = ({ message }) => {\n  return (\n    <Container className=\"error\">\n      <span>i</span> {message}\n    </Container>\n  );\n};\n\nexport default ValidationError;\n\nconst Container = styled.div`\n  font-size: 1.1rem;\n  padding: 0.5rem 0;\n  span {\n    font-style: italic;\n    color: tomato;\n    margin-right: 0.3rem;\n    font-weight: 700;\n    font-size: 1.1rem;\n  }\n`;\n"],"names":["_jsx","Container","children","_jsxs","FormContainer","Title","text","Formik","initialValues","email","validationSchema","yup","required","onSubmit","values","_ref","resetForm","axiox","then","res","status","toast","success","data","message","catch","err","_err$response","_err$response$data","error","response","console","log","finally","Form","TextInput","label","type","name","placeholder","Button","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","InputGroup","htmlFor","id","_objectSpread","touched","ValidationError","rest","ButtonDefault","button","_ref$variant","variant","style","className"],"sourceRoot":""}