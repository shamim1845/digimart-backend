{"version":3,"file":"static/js/219.9755ef02.chunk.js","mappings":"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","sources":["components/products/ProductCard.jsx","components/utils/PageContainer.jsx","components/utils/Pagination.jsx","components/utils/customHooks/useCartHandler.js","components/utils/fetchUtils/NotFound.jsx","components/utils/helperFunction/currencyConverter.js","components/utils/reUseableComponents/Currency.jsx","components/utils/skeleton/ProductCardSkeleton.jsx","redux/api/products/productsAPI.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Rating } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport useCartHandler from \"../utils/customHooks/useCartHandler\";\r\nimport Currency from \"../utils/reUseableComponents/Currency\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  // Custom hook for cart handling\r\n  const { quantity, addToCartHandler } = useCartHandler(product?._id);\r\n\r\n  // Effect for set quantity from cart\r\n  useEffect(() => {\r\n    if (quantity) {\r\n      setValue(quantity);\r\n    }\r\n  }, [quantity]);\r\n\r\n  // form submit handler\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addToCartHandler(value);\r\n    setShowInput(false);\r\n  };\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Link to={`/products/${product._id}`}>\r\n        <CardHead>\r\n          <img src={product.images[0].url} alt=\"\" />\r\n        </CardHead>\r\n        <CardBody>\r\n          <div className=\"price_rating\">\r\n            <div className=\"price\">\r\n              <Currency price={product?.price} />\r\n            </div>\r\n            <Rating\r\n              name=\"half-rating-read\"\r\n              value={product.avgRatings}\r\n              precision={0.1}\r\n              readOnly\r\n              style={{ fontSize: \"2rem\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            {product.name.length > 35 ? (\r\n              <p>{`${product.name.slice(0, 50)}...`}</p>\r\n            ) : (\r\n              <p>{product.name}</p>\r\n            )}\r\n          </div>\r\n        </CardBody>\r\n      </Link>\r\n      <AddToCartBtn quantity={quantity}>\r\n        <>\r\n          {quantity > 0 ? (\r\n            <div className=\"btnContainer\">\r\n              <button\r\n                className=\"removeBtn\"\r\n                onClick={() => addToCartHandler(quantity - 1)}\r\n                disabled={quantity === 0}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-dash\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\r\n                </svg>\r\n              </button>\r\n              <div className=\"textElement\">\r\n                {showInput ? (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <input\r\n                      name=\"quantity\"\r\n                      type=\"number\"\r\n                      max={product?.stock}\r\n                      min={1}\r\n                      value={value}\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                  </form>\r\n                ) : (\r\n                  <span\r\n                    title=\"Double-click to set the quantity\"\r\n                    onDoubleClick={() => setShowInput(true)}\r\n                  >\r\n                    {quantity}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <button\r\n                className=\"addBtn\"\r\n                disabled={quantity >= product?.stock}\r\n                onClick={() => addToCartHandler(quantity + 1)}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-plus\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"btnContainer emptyBtnContainer\"\r\n              onClick={() => addToCartHandler(quantity + 1)}\r\n            >\r\n              <div className=\"textElement\">\r\n                <span>{quantity > 0 ? quantity : \"Add\"}</span>\r\n              </div>\r\n              <div>\r\n                <button className=\"addBtn\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-plus\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      </AddToCartBtn>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductCard);\r\n\r\nconst CardContainer = styled.div`\r\n  background: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 40rem;\r\n  transition: all 0.3s ease-in-out;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  box-shadow: var(--shadow-1);\r\n\r\n  &:hover {\r\n    transform: translateY(-0.6rem);\r\n    box-shadow: var(--shadow);\r\n  }\r\n`;\r\n\r\nconst CardHead = styled.div`\r\n  height: 25rem;\r\n  padding: 1rem 2rem 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .price_rating {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .price {\r\n      color: var(--text-primary);\r\n      font-size: 1.6rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    color: var(--text-secondary);\r\n    font-size: 1.4rem;\r\n    font-weight: 400;\r\n    margin: 0.5rem 0;\r\n    line-height: 1.25;\r\n  }\r\n`;\r\n\r\nconst AddToCartBtn = styled.div`\r\n  padding: 1rem 2rem 2.5rem;\r\n\r\n  .btnContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: ${({ quantity }) =>\r\n      quantity > 0 ? \"tomato\" : \"#eff0f5\"};\r\n    border-radius: 0.5rem;\r\n    overflow: hidden;\r\n\r\n    button {\r\n      border: none;\r\n      outline: none;\r\n      padding: 1rem;\r\n      background: none;\r\n      cursor: pointer;\r\n      transition: background-color 0.2s ease-in-out;\r\n\r\n      &:hover {\r\n        background-color: #df6550;\r\n      }\r\n\r\n      svg {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        fill: ${({ quantity }) => (quantity > 0 ? \"#fff\" : \"\")};\r\n      }\r\n    }\r\n\r\n    .textElement {\r\n      color: ${({ quantity }) => (quantity > 0 ? \"#fff\" : \"\")};\r\n\r\n      form {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        user-select: none;\r\n\r\n        input {\r\n          width: 100%;\r\n          max-width: 8rem;\r\n          border: none;\r\n          outline: none;\r\n          padding-left: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .emptyBtnContainer {\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: tomato;\r\n      color: #fff;\r\n\r\n      button {\r\n        background-color: #df6550;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    div {\r\n      flex: 1;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      height: 100%;\r\n    }\r\n\r\n    .addBtn {\r\n      background-color: #e0e1e4;\r\n      height: 100%;\r\n      transition: color 0.2s ease-in-out;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PageContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default PageContainer;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 0 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 768px) {\r\n    padding: 0 2rem;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\nconst Pagination = ({ pages, currentPage, setCurrentPage }) => {\r\n  const prevHandler = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    if (currentPage < pages.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <Prev>\r\n        <Btn onClick={prevHandler} disabled={Number(currentPage) === 1}>\r\n          <ArrowBackIosIcon />\r\n        </Btn>\r\n      </Prev>\r\n      <Page>\r\n        {pages &&\r\n          pages?.map((pageNo) => {\r\n            return (\r\n              <li key={pageNo} onClick={() => setCurrentPage(pageNo)}>\r\n                <Btn active={pageNo === currentPage}>{pageNo}</Btn>\r\n              </li>\r\n            );\r\n          })}\r\n      </Page>\r\n      <Next>\r\n        <Btn\r\n          onClick={nextHandler}\r\n          disabled={Number(currentPage) === Number(pages.length)}\r\n        >\r\n          <ArrowForwardIosIcon />\r\n        </Btn>\r\n      </Next>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nconst PaginationContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\nconst Prev = styled.div``;\r\nconst Page = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n`;\r\nconst Next = styled(Prev)``;\r\n\r\nconst Btn = styled.button`\r\n  min-width: 3rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\r\n    rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\r\n  background-color: ${({ active }) => (active ? \"tomato\" : \"\")};\r\n  font-size: 1.3rem;\r\n`;\r\n","import { useEffect, useState } from \"react\";\nimport {\n  useAddToCartMutation,\n  useGetMyCartListQuery,\n  useRemoveFromCartMutation,\n} from \"../../../redux/api/cart/cartAPI\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRemoveToFavouriteListMutation } from \"../../../redux/api/favourite/favouriteAPI\";\n\nconst useCartHandler = (productId) => {\n  const [quantity, setQuantity] = useState(0);\n\n  const navigate = useNavigate();\n\n  // get my cart list\n  const { isSuccess, data } = useGetMyCartListQuery();\n  // find item already exist or not in cart list, if exist set cart quantity\n  useEffect(() => {\n    if (isSuccess) {\n      const item = data?.carts?.find(\n        (item) => item?.product?._id === productId\n      );\n      if (item) {\n        setQuantity(item?.quantity);\n      } else {\n        setQuantity(0);\n      }\n    }\n  }, [isSuccess, data?.carts, productId]);\n\n  // Mutation for add to cart\n  const [addToCart] = useAddToCartMutation();\n  // Mutation for remove to cart\n  const [removeFromCart] = useRemoveFromCartMutation();\n  // Remove  from favourite mutation\n  const [removeFromFavouriteList] = useRemoveToFavouriteListMutation();\n\n  // Add to cart handler\n  const addToCartHandler = (qty) => {\n    if (qty === 0) {\n      removeFromCart({ productId })\n        .unwrap()\n        .then((res) => {\n          toast.info(res?.message);\n        })\n        .catch((err) => {\n          toast.error(err?.data?.message);\n        });\n    } else {\n      addToCart({ productId, quantity: qty })\n        .unwrap()\n        .then((res) => {\n          toast.success(res?.message);\n        })\n        .catch((err) => {\n          toast.error(err?.data?.message);\n          if (err?.status === 401) {\n            setTimeout(() => {\n              navigate(\"/login\");\n              window.scrollTo(0, 0);\n            }, 2000);\n          }\n        });\n    }\n  };\n\n  // Add to cart handler\n  const addToCartFromFavouriteHandler = () => {\n    addToCart({ productId, quantity: 1 })\n      .unwrap()\n      .then((res) => {\n        toast.success(res?.message);\n        removeFromFavouriteList({ productId });\n      })\n      .catch((err) => {\n        toast.error(err.data?.message);\n      });\n  };\n\n  // Remove from cart handler\n  const removeFromCartHandler = () => {\n    removeFromCart({ productId })\n      .unwrap()\n      .then((res) => {\n        toast.info(res?.message);\n      })\n      .catch((err) => {\n        toast.error(err?.data?.message);\n      });\n  };\n\n  return {\n    quantity,\n    addToCartHandler,\n    addToCartFromFavouriteHandler,\n    removeFromCartHandler,\n  };\n};\n\nexport default useCartHandler;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"../reUseableComponents/Title\";\n\nconst NotFound = ({ style, text }) => {\n  return (\n    <Container style={style}>\n      <Title variant=\"h1\" text=\"Oops!\" />\n      <p>{text}</p>\n    </Container>\n  );\n};\n\nexport default NotFound;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Converter } from \"easy-currencies\";\n\nconst currencyConverter = async ({ amount, from, to }) => {\n  const api_key = process.env.REACT_APP_OPENEXCHANGE_API_KEY;\n  const converter = new Converter(\"OpenExchangeRates\", api_key);\n\n  const value = await converter.convert(amount, from, to);\n\n  return value.toFixed(2);\n};\n\nexport default currencyConverter;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrency } from \"../../../redux/user/userSelector\";\nimport currencyConverter from \"../helperFunction/currencyConverter\";\nimport { currencyConstants } from \"../constants/currencyConstants\";\n\nconst Currency = ({ price }) => {\n  const [amount, setAmount] = useState(null);\n\n  const currency = useSelector(selectCurrency);\n\n  // convert currency\n  useEffect(() => {\n    currencyConverter({ amount: price, from: \"USD\", to: currency }).then(\n      (res) => {\n        setAmount(res);\n      }\n    );\n  }, [currency, price]);\n\n  // find selected currency\n  const selectedCurrency = currencyConstants.find(\n    (currCurrency) => currCurrency.name === currency\n  );\n\n  return (\n    <>\n      <span> {selectedCurrency?.icon}</span>\n      <span> {amount}</span>\n    </>\n  );\n};\n\nexport default Currency;\n","import { Rating } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProductCardSkeleton = () => {\r\n  return (\r\n    <CardContainer>\r\n      <CardHead>\r\n        <div className=\"img animate-pulse\"></div>\r\n      </CardHead>\r\n\r\n      <CardBody>\r\n        <div className=\"price_rating\">\r\n          <span className=\"price animate-pulse\"></span>\r\n          <Rating\r\n            className=\"animate-pulse\"\r\n            name=\"half-rating-read\"\r\n            value={0}\r\n            precision={0.1}\r\n            readOnly\r\n            style={{ fontSize: \"2rem\" }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"title\">\r\n          <p className=\"animate-pulse\"></p>\r\n          <p className=\"animate-pulse\"></p>\r\n        </div>\r\n      </CardBody>\r\n\r\n      <AddToCartBtn>\r\n        <div className=\"btnContainer emptyBtnContainer animate-pulse\">\r\n          <div className=\"textElement\"></div>\r\n          <div>\r\n            <button className=\"addBtn \"></button>\r\n          </div>\r\n        </div>\r\n      </AddToCartBtn>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default ProductCardSkeleton;\r\n\r\nconst CardContainer = styled.div`\r\n  background: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 40rem;\r\n  transition: all 0.3s ease-in-out;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\r\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n`;\r\n\r\nconst CardHead = styled.div`\r\n  height: 25rem;\r\n  padding: 1rem 2rem 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .img {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #e0e1e4;\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .price_rating {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .price {\r\n      width: 7rem;\r\n      height: 2rem;\r\n      background-color: #e0e1e4;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    margin: 1rem 0;\r\n\r\n    p {\r\n      width: 100%;\r\n      height: 1rem;\r\n      background-color: #e0e1e4;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddToCartBtn = styled.div`\r\n  padding: 1rem 2rem 2.5rem;\r\n\r\n  .btnContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: ${({ quantity }) =>\r\n      quantity > 0 ? \"tomato\" : \"#eff0f5\"};\r\n    border-radius: 0.5rem;\r\n    overflow: hidden;\r\n\r\n    button {\r\n      border: none;\r\n      outline: none;\r\n      padding: 1rem;\r\n      background: none;\r\n      transition: background-color 0.2s ease-in-out;\r\n\r\n      svg {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        fill: ${({ quantity }) => (quantity > 0 ? \"#fff\" : \"\")};\r\n      }\r\n    }\r\n\r\n    .textElement {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n\r\n  .emptyBtnContainer {\r\n    div {\r\n      flex: 1;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      height: 100%;\r\n    }\r\n\r\n    .addBtn {\r\n      background-color: #e0e1e4;\r\n      height: 100%;\r\n      padding: 1.8rem;\r\n    }\r\n  }\r\n`;\r\n","import apiCreator from \"../apiCreator\";\n\nconst productsAPI = apiCreator.injectEndpoints({\n  endpoints: (builder) => ({\n    getProducts: builder.query({\n      query: (query) => ({\n        url: `products?${query}`,\n      }),\n    }),\n    getProduct: builder.query({\n      query: (id) => ({\n        url: `product/${id}`,\n      }),\n    }),\n    deleteProduct: builder.mutation({\n      query: (id) => ({\n        url: `admin/product/${id}`,\n        method: \"DELETE\",\n      }),\n    }),\n    getNewArivalsCategories: builder.query({\n      query: () => ({\n        url: `products/new-arrivals-categories`,\n      }),\n    }),\n    getNewArivals: builder.query({\n      query: ({ category, currentPage }) => ({\n        url: `products/new-arrivals?category=${category}&page=${currentPage}`,\n      }),\n    }),\n    createProduct: builder.mutation({\n      query: (product) => ({\n        url: \"admin/product/new\",\n        method: \"POST\",\n        body: product,\n      }),\n    }),\n    updateProduct: builder.mutation({\n      query: ({ id, product }) => ({\n        url: `admin/product/${id}`,\n        method: \"PUT\",\n        body: product,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetProductsQuery,\n  useGetProductQuery,\n  useDeleteProductMutation,\n  useGetNewArivalsCategoriesQuery,\n  useGetNewArivalsQuery,\n  useCreateProductMutation,\n  useUpdateProductMutation,\n} = productsAPI;\n"],"names":["ProductCard","product","useState","showInput","setShowInput","value","setValue","useCartHandler","_id","quantity","addToCartHandler","useEffect","CardContainer","to","CardHead","src","images","url","alt","CardBody","className","price","name","avgRatings","precision","readOnly","style","fontSize","length","slice","AddToCartBtn","onClick","disabled","xmlns","width","height","fill","viewBox","d","onSubmit","e","preventDefault","type","max","stock","min","onChange","target","title","onDoubleClick","React","styled","children","Container","pages","currentPage","setCurrentPage","PaginationContainer","Prev","Btn","Number","Page","map","pageNo","active","Next","productId","setQuantity","navigate","useNavigate","useGetMyCartListQuery","isSuccess","data","item","carts","find","useAddToCartMutation","addToCart","useRemoveFromCartMutation","removeFromCart","useRemoveToFavouriteListMutation","removeFromFavouriteList","qty","unwrap","then","res","toast","message","catch","err","status","setTimeout","window","scrollTo","addToCartFromFavouriteHandler","removeFromCartHandler","text","variant","currencyConverter","amount","from","process","converter","Converter","convert","toFixed","setAmount","currency","useSelector","selectCurrency","selectedCurrency","currencyConstants","currCurrency","icon","productsAPI","apiCreator","endpoints","builder","getProducts","query","getProduct","id","deleteProduct","mutation","method","getNewArivalsCategories","getNewArivals","category","createProduct","body","updateProduct","useGetProductsQuery","useGetProductQuery","useDeleteProductMutation","useGetNewArivalsCategoriesQuery","useGetNewArivalsQuery","useCreateProductMutation","useUpdateProductMutation"],"sourceRoot":""}