{"version":3,"file":"static/js/247.56021137.chunk.js","mappings":"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","sources":["components/Auth/ChangePassword.js","components/account/profile/MyProfile.jsx","components/utils/formik/TextInput.jsx","components/utils/reUseableComponents/Buttons.jsx","components/utils/reUseableComponents/MUIButton.jsx","components/utils/validationUtils/ValidationError.jsx","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport axiox from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Title from \"../utils/reUseableComponents/Title\";\nimport TextInput from \"../utils/formik/TextInput\";\nimport Button from \"../utils/reUseableComponents/Buttons\";\n\nconst ChangePassword = ({ setIsChangePassword }) => {\n  return (\n    <Container>\n      <Title variant=\"h2\" text={\"Change Your Password\"}></Title>\n      <br />\n      <br />\n      <Formik\n        initialValues={{\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\",\n        }}\n        validationSchema={yup.object({\n          oldPassword: yup\n            .string()\n            .required(\"Old password is required.\")\n            .min(8, \"Old password must have at least 8 characters.\"),\n          newPassword: yup\n            .string()\n            .required(\"New password is required.\")\n            .min(8, \"New password must have at least 8 characters.\"),\n          confirmPassword: yup\n            .string()\n            .required(\"Confirm password is required.\")\n            .min(8, \"Confirm password must have at least 8 characters.\")\n            .oneOf(\n              [yup.ref(\"newPassword\"), null],\n              \"New password and Confirm password must match.\"\n            ),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          const { oldPassword, newPassword, confirmPassword } = values;\n\n          // update password\n          axiox\n            .put(`/api/v1/password/update`, {\n              oldPassword,\n              newPassword,\n              confirmPassword,\n            })\n            .then((res) => {\n              if (res.status === 200) {\n                toast.success(\"Password update successfully.\");\n                resetForm({ values: \"\" });\n                setIsChangePassword(false);\n              } else {\n                toast.error(\"Invalid login details\");\n              }\n            })\n            .catch((err) => {\n              toast.error(\n                err?.response?.data?.message || \"Invalid login details\"\n              );\n              console.log({ err });\n            });\n        }}\n      >\n        <Form>\n          <TextInput\n            label=\"Enter your old password\"\n            type=\"password\"\n            name=\"oldPassword\"\n            placeholder=\"$12345678\"\n          />\n          <TextInput\n            label=\"Enter your new password\"\n            type=\"password\"\n            name=\"newPassword\"\n            placeholder=\"@98524789\"\n          />\n          <TextInput\n            label=\"Confirm password\"\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"@98524789\"\n          />\n          <br />\n          <Button text={\"Change Password\"} type=\"submit\" />\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n\nexport default ChangePassword;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 45rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 5rem;\n  padding: 2rem;\n  box-shadow: var(--shadow-3);\n`;\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangePassword from \"../../Auth/ChangePassword\";\r\nimport Title from \"../../utils/reUseableComponents/Title\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserInfo } from \"../../../redux/user/userSelector\";\r\nimport MUIButton from \"../../utils/reUseableComponents/MUIButton\";\r\nconst MyProfile = () => {\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const user = useSelector(selectUserInfo);\r\n\r\n  return (\r\n    <ProfileContainer>\r\n      <Title variant=\"h1\" text=\"My Profile\" style={{ textAlign: \"center\" }} />\r\n\r\n      <Content>\r\n        <UserImage>\r\n          <img src={user?.avatar?.url} alt=\"profile_picture\" />\r\n        </UserImage>\r\n\r\n        <UserDetails>\r\n          <div className=\"detils_group\">\r\n            <span>Full name</span>\r\n            <span>{user?.name}</span>\r\n          </div>\r\n          <div className=\"detils_group\">\r\n            <span>Email Address</span>\r\n            <span>{user?.email}</span>\r\n          </div>\r\n          <div className=\"detils_group\">\r\n            <span>Mobile</span>\r\n            <span>{user?.mobile}</span>\r\n          </div>\r\n\r\n          <div className=\"detils_group\">\r\n            <span>Birthday</span>\r\n            <span>{user?.birthday}</span>\r\n          </div>\r\n          <div className=\"detils_group\">\r\n            <span>Gender</span>\r\n            <span>{user?.gender}</span>\r\n          </div>\r\n        </UserDetails>\r\n\r\n        <ButtonContainer>\r\n          <Link to={\"/account/updateProfile\"} style={{ flex: \"1\" }}>\r\n            <MUIButton style={{ margin: \"0\" }}>EDIT PROFILE</MUIButton>\r\n          </Link>\r\n\r\n          <MUIButton\r\n            style={{ margin: \"0\", flex: \"1\" }}\r\n            onClick={() => setIsChangePassword((prev) => !prev)}\r\n          >\r\n            CHANGE PASSWORD\r\n          </MUIButton>\r\n        </ButtonContainer>\r\n\r\n        {isChangePassword && (\r\n          <ChangePassword setIsChangePassword={setIsChangePassword} />\r\n        )}\r\n      </Content>\r\n    </ProfileContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  padding: 2rem;\r\n  margin-bottom: 3rem;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--shadow-1);\r\n  padding: 5rem;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    box-shadow: var(--shadow-3);\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nconst UserImage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5rem;\r\n  img {\r\n    width: 13rem;\r\n    height: 13rem;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst UserDetails = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 3rem;\r\n  margin-bottom: 5rem;\r\n\r\n  .detils_group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.3rem;\r\n\r\n    span:last-child {\r\n      font-size: 1.4rem;\r\n      color: var(--text-primary);\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  @media screen and (max-width: 850px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 5rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst TextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <InputGroup>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n\nconst InputGroup = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  input {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    font-size: 1.3rem;\n    border-radius: 2px;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n      color: #000;\n    }\n    &::placeholder {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = ({ text, children, ...rest }) => {\n  return (\n    <ButtonDefault {...rest}>\n      <span>{text}</span> {children}\n    </ButtonDefault>\n  );\n};\n\nexport default Button;\n\nconst ButtonDefault = styled.button`\n  border: none;\n  color: var(--text-primary);\n  background-color: tomato;\n  padding: 1rem 3rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #dd5a43;\n    color: #f1f1f1;\n  }\n  &:disabled {\n    background-color: #dd5a43d3;\n    cursor: not-allowed;\n    color: var(--text-primary);\n  }\n`;\n","import { styled as btn } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\n\nconst MUIButton = btn(Button)({\n  backgroundColor: \"tomato\",\n  width: \"100%\",\n  color: \"var(--text-primary)\",\n  fontFamily: \"Poppins\",\n  fontSize: \"1.6rem\",\n  padding: \"1rem 3rem\",\n  margin: \"2rem 0 1rem\",\n  \"&:hover\": {\n    backgroundColor: \"#A9333A\",\n  },\n});\n\nexport default MUIButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ValidationError = ({ message }) => {\n  return (\n    <Container className=\"error\">\n      <span>i</span> {message}\n    </Container>\n  );\n};\n\nexport default ValidationError;\n\nconst Container = styled.div`\n  font-size: 1.1rem;\n  padding: 0.5rem 0;\n  span {\n    font-style: italic;\n    color: tomato;\n    margin-right: 0.3rem;\n    font-weight: 700;\n    font-size: 1.1rem;\n  }\n`;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["setIsChangePassword","Container","Title","variant","text","initialValues","oldPassword","newPassword","confirmPassword","validationSchema","yup","required","min","oneOf","onSubmit","values","resetForm","axiox","then","res","status","toast","catch","err","response","data","message","console","log","TextInput","label","type","name","placeholder","styled","useState","isChangePassword","user","useSelector","selectUserInfo","ProfileContainer","style","textAlign","Content","UserImage","src","avatar","url","alt","UserDetails","className","email","mobile","birthday","gender","ButtonContainer","to","flex","MUIButton","margin","onClick","prev","props","useField","field","meta","InputGroup","htmlFor","id","touched","error","children","rest","ButtonDefault","btn","Button","backgroundColor","width","color","fontFamily","fontSize","padding","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}