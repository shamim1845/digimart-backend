{"version":3,"file":"static/js/12.65342aa7.chunk.js","mappings":"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","sources":["components/admin/routes/products/CreateProduct.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextInput from \"../../../utils/formik/TextInput\";\r\nimport { useCreateProductMutation } from \"../../../../redux/api/products/productsAPI\";\r\nimport CategorySelector from \"../../../utils/reUseableComponents/CategorySelector\";\r\nimport RichTextEditor from \"../../../utils/reUseableComponents/RichTextEditor\";\r\nimport ImageUploader from \"../../../utils/reUseableComponents/ImageUploader\";\r\nimport Title from \"../../../utils/reUseableComponents/Title\";\r\nimport MediaUpload from \"../../../utils/helperFunction/MediaUpload\";\r\nimport SelectBox from \"../../../utils/formik/SelectBox\";\r\nimport { useGetAllBrandQuery } from \"../../../../redux/api/brand/brandAPI\";\r\nimport Button from \"../../../utils/reUseableComponents/Buttons\";\r\n\r\nconst CreateProduct = () => {\r\n  // => state\r\n  const [categories, setCategories] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n\r\n  // Error state\r\n  const [categoriesError, setCategoriesError] = useState(null);\r\n  const [descError, setDescError] = useState(null);\r\n  const [imagesError, setImagesError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Create product mutation\r\n  const [createProduct, { data, isError, error, isLoading, isSuccess }] =\r\n    useCreateProductMutation();\r\n\r\n  // => Effect for show Error and Success message\r\n  useEffect(() => {\r\n    if (isError) toast.error(error?.message);\r\n    if (isSuccess) {\r\n      toast.success(data?.message);\r\n      navigate(\"/admin/products\");\r\n    }\r\n  }, [isError, isSuccess, data?.message, error?.message, navigate]);\r\n\r\n  // => Effect for handle Category, Description, and Images error\r\n  useEffect(() => {\r\n    if (categories?.length > 0) {\r\n      setCategoriesError(null);\r\n    }\r\n\r\n    if (images?.length > 0) {\r\n      setImagesError(null);\r\n    }\r\n\r\n    if (description && description.split(\" \").length < 10) {\r\n      setDescError(\"Description must have at least 10 word.\");\r\n    } else {\r\n      setDescError(null);\r\n    }\r\n  }, [categories?.length, images, description]);\r\n\r\n  // Fetch brands for brand selection\r\n  const { data: brandsdata } = useGetAllBrandQuery();\r\n\r\n  return (\r\n    <CreateProductContainer>\r\n      <Title variant=\"h2\" text=\"Create Product\" />\r\n      <Content>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            price: \"\",\r\n            brand: \"\",\r\n            stock: \"\",\r\n          }}\r\n          validationSchema={yup.object({\r\n            name: yup\r\n              .string()\r\n              .required(\"Product name is required.\")\r\n              .min(3, \"Product name must have at least 3 characters.\"),\r\n            price: yup\r\n              .number()\r\n              .required(\"Product price is required.\")\r\n              .max(100000, \"Maximum product price 100000\"),\r\n            brand: yup.string(),\r\n            stock: yup\r\n              .number()\r\n              .min(1, \"Product stock must be greater than or equal 1\")\r\n              .required(\"Product stock  is required.\"),\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            // => validation\r\n            if (!categories?.length || !description || !images?.length) {\r\n              if (!categories?.length)\r\n                setCategoriesError(\"Category is required.\");\r\n              if (!description) setDescError(\"Description is required.\");\r\n              if (!images?.length) setImagesError(\"Product image is required.\");\r\n              return;\r\n            }\r\n\r\n            if (description && description.split(\" \").length < 10) {\r\n              return setDescError(\"Description must have at least 10 word.\");\r\n            }\r\n\r\n            // => Upload images to Cloudinary\r\n            MediaUpload(images, \"products\")\r\n              .then((uploadedImages) => {\r\n                // => Images array modification for send in DB\r\n                const modiFiedImages = uploadedImages.map((img) => {\r\n                  return { public_id: img.public_id, url: img.secure_url };\r\n                });\r\n                // => Prepare product based on Schema\r\n                const product = {\r\n                  ...values,\r\n                  categories,\r\n                  description,\r\n                  images: modiFiedImages,\r\n                };\r\n                createProduct(product);\r\n              })\r\n              .catch((err) => {\r\n                setImagesError(\"There was an error while uploading images.\");\r\n              });\r\n          }}\r\n        >\r\n          <Form>\r\n            <TextInput\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your product name\"\r\n            />\r\n            <TextInput\r\n              label=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              placeholder=\"Enter your product price\"\r\n            />\r\n            <SelectBox label=\"Brand\" name=\"brand\">\r\n              <option value=\"\">Choose a brand</option>\r\n              {brandsdata?.brands.map((brand) => (\r\n                <option key={brand?._id} value={brand?.name}>\r\n                  {brand?.name}\r\n                </option>\r\n              ))}\r\n            </SelectBox>\r\n            <TextInput\r\n              label=\"Stock\"\r\n              name=\"stock\"\r\n              type=\"number\"\r\n              placeholder=\"Product stock\"\r\n            />\r\n            <CategoriesContainer>\r\n              <CategorySelector\r\n                label=\"Category\"\r\n                categories={categories}\r\n                setCategories={setCategories}\r\n                categoriesError={categoriesError}\r\n                setCategoriesError={setCategoriesError}\r\n              />\r\n            </CategoriesContainer>\r\n\r\n            <DescriptionContainer>\r\n              <RichTextEditor\r\n                label=\"Description\"\r\n                richText={description}\r\n                setRichText={setDescription}\r\n                richTextError={descError}\r\n                setRichTextError={setDescError}\r\n              />\r\n            </DescriptionContainer>\r\n\r\n            <ProductImage>\r\n              <ImageUploader\r\n                label=\"Product Images\"\r\n                images={images}\r\n                setImages={setImages}\r\n                imagesError={imagesError}\r\n                setImagesError={setImagesError}\r\n              />\r\n            </ProductImage>\r\n\r\n            <br />\r\n            <Button type=\"submit\" disabled={isLoading} text=\"Submit\" />\r\n          </Form>\r\n        </Formik>\r\n      </Content>\r\n    </CreateProductContainer>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n\r\nconst CreateProductContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--shadow-1);\r\n  padding: 5rem;\r\n  width: 100%;\r\n  @media screen and (max-width: 768px) {\r\n    /* margin: 0 5rem; */\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    /* padding: 2rem; */\r\n  }\r\n`;\r\n\r\nconst CategoriesContainer = styled.div``;\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst ProductImage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["useState","categories","setCategories","description","setDescription","images","setImages","categoriesError","setCategoriesError","descError","setDescError","imagesError","setImagesError","navigate","useNavigate","useCreateProductMutation","createProduct","data","isError","error","isLoading","isSuccess","useEffect","toast","message","length","split","brandsdata","useGetAllBrandQuery","CreateProductContainer","variant","text","Content","initialValues","name","price","brand","stock","validationSchema","yup","required","min","max","onSubmit","values","setSubmitting","MediaUpload","then","uploadedImages","modiFiedImages","map","img","public_id","url","secure_url","product","catch","err","label","type","placeholder","value","brands","_id","CategoriesContainer","DescriptionContainer","richText","setRichText","richTextError","setRichTextError","ProductImage","disabled","styled","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}