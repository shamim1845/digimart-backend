{"version":3,"file":"static/js/275.83579493.chunk.js","mappings":"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","sources":["components/Auth/Register.js","components/utils/formik/TextInput.jsx","components/utils/reUseableComponents/Buttons.jsx","components/utils/validationUtils/ValidationError.jsx","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axiox from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Title from \"../utils/reUseableComponents/Title\";\r\nimport Button from \"../utils/reUseableComponents/Buttons\";\r\nimport TextInput from \"../utils/formik/TextInput\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <Title text=\"Create an account \" />\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            cPassword: \"\",\r\n          }}\r\n          validationSchema={yup.object({\r\n            name: yup\r\n              .string()\r\n              .min(3, \"Name must have at least 3 characters.\")\r\n              .required(\"Name is required.\"),\r\n            email: yup\r\n              .string()\r\n              .email(\"Email must be a valid email.\")\r\n              .required(\"Email is required.\"),\r\n            password: yup\r\n              .string()\r\n              .min(8, \"Password must have at least 8 characters.\")\r\n              .required(\"Password is required.\"),\r\n            cPassword: yup\r\n              .string()\r\n              .min(8, \"Confirm password must have at least 8 characters.\")\r\n              .required(\"Confirm password is required.\")\r\n              .oneOf(\r\n                [yup.ref(\"password\"), null],\r\n                \"Password and Confirm Password must match.\"\r\n              ),\r\n          })}\r\n          onSubmit={(values, { resetForm }) => {\r\n            const { name, email, password } = values;\r\n\r\n            axiox\r\n              .post(`/api/v1/register`, { name, email, password })\r\n              .then((res) => {\r\n                if (res.status === 201) {\r\n                  toast.success(\"Registration Sucessfull.\");\r\n\r\n                  setTimeout(() => {\r\n                    navigate(\"/\");\r\n                    window.location.reload();\r\n                  }, 2000);\r\n                } else {\r\n                  toast.error(\"Registration failed.\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                toast.error(\"Registration failed.\");\r\n                console.error(err);\r\n              });\r\n          }}\r\n        >\r\n          <Form>\r\n            <TextInput\r\n              label=\"Name\"\r\n              type=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Your Name\"\r\n            />\r\n            <TextInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter Your Email\"\r\n            />\r\n            <TextInput\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n            <TextInput\r\n              label=\"Confirm password\"\r\n              type=\"password\"\r\n              name=\"cPassword\"\r\n              placeholder=\"Enter confirm password\"\r\n            />\r\n\r\n            <Button type=\"submit\" text=\"Register\" />\r\n          </Form>\r\n        </Formik>\r\n\r\n        <Message>\r\n          <p>\r\n            By creating an account, you agree to DIGIMART's\r\n            <Link to={\"/conditions\"}> Conditions of Use </Link>and\r\n            <Link to={\"/privacy-policy\"}> Privacy Notice.</Link>\r\n          </p>\r\n        </Message>\r\n      </FormContainer>\r\n\r\n      <ButtonContainer>\r\n        <div>\r\n          <p>Already have an account?</p>\r\n          <Link to={\"/login\"}>Sign-In</Link>\r\n        </div>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 50rem;\r\n  margin: 5rem auto;\r\n  padding: 1rem;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    margin: 2rem auto;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  padding: 3rem;\r\n  box-shadow: var(--shadow-1);\r\n  border-radius: 5px;\r\n\r\n  form {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  margin: 1rem 0;\r\n  p {\r\n    color: var(--text-secondary);\r\n\r\n    margin-bottom: 1rem;\r\n  }\r\n  a {\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n  a:hover {\r\n    color: tomato;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin: 3rem;\r\n  width: 100%;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    & p {\r\n      margin: 1rem 0;\r\n    }\r\n    & a {\r\n      text-align: center;\r\n      border: 1px solid var(--text-primary);\r\n      width: 100%;\r\n      border-radius: 3px;\r\n      padding: 1rem;\r\n      transition: all 0.3s ease-in-out;\r\n      &:hover {\r\n        box-shadow: rgba(0, 0, 0, 0.1) 0px -50px 36px -30px inset;\r\n        color: tomato;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst TextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <InputGroup>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n\nconst InputGroup = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  input {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 3.5rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    font-size: 1.3rem;\n    border-radius: 2px;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n      color: #000;\n    }\n    &::placeholder {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = ({ text, children, ...rest }) => {\n  return (\n    <ButtonDefault {...rest}>\n      <span>{text}</span> {children}\n    </ButtonDefault>\n  );\n};\n\nexport default Button;\n\nconst ButtonDefault = styled.button`\n  border: none;\n  color: var(--text-primary);\n  background-color: tomato;\n  padding: 1rem 3rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #dd5a43;\n    color: #f1f1f1;\n  }\n  &:disabled {\n    background-color: #dd5a43d3;\n    cursor: not-allowed;\n    color: var(--text-primary);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ValidationError = ({ message }) => {\n  return (\n    <Container className=\"error\">\n      <span>i</span> {message}\n    </Container>\n  );\n};\n\nexport default ValidationError;\n\nconst Container = styled.div`\n  font-size: 1.1rem;\n  padding: 0.5rem 0;\n  span {\n    font-style: italic;\n    color: tomato;\n    margin-right: 0.3rem;\n    font-weight: 700;\n    font-size: 1.1rem;\n  }\n`;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["navigate","useNavigate","Container","FormContainer","text","initialValues","name","email","password","cPassword","validationSchema","yup","min","required","oneOf","onSubmit","values","resetForm","axiox","then","res","status","toast","setTimeout","window","location","reload","catch","err","console","error","label","type","placeholder","Message","to","ButtonContainer","styled","props","useField","field","meta","InputGroup","htmlFor","id","touched","message","children","rest","ButtonDefault","className","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}