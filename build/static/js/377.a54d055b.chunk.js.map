{"version":3,"file":"static/js/377.a54d055b.chunk.js","mappings":"wQA2GA,UAnGsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACbC,GAASC,EAAAA,EAAAA,MACPC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,gBAAiB,IAEnBC,iBAAkBC,EAAAA,GAAW,CAC3BH,SAAUG,EAAAA,KAEPC,IAAI,EAAG,6CACPC,SAAS,yBACZJ,gBAAiBE,EAAAA,KAEdG,KAAK,YAAY,SAACN,EAAUO,GAAX,OAChBP,EACIO,EACGF,SAAS,iCACTG,MAAM,CAACL,EAAAA,GAAQ,WAAY,gBAC9BI,OAGVE,SAAS,WAAD,wBAAE,WAAOC,EAAP,uFAAiBC,EAAjB,EAAiBA,UACjBX,EAA8BU,EAA9BV,SAAUC,EAAoBS,EAApBT,gBADV,kBAGYW,IAAAA,IAAA,iCAAoCjB,EAAOkB,OAAS,CACpEb,SAAAA,EACAC,gBAAAA,IALI,OAGAa,EAHA,OAONC,QAAQC,IAAIF,GACO,MAAfA,EAAIG,UACNC,EAAAA,EAAAA,IAAM,gCAENC,YAAW,WACT1B,EAAS,KACT2B,OAAOC,SAASC,WACf,MAdC,kDAiBNJ,EAAAA,GAAAA,MAAY,kCACZH,QAAQC,IAAR,MAlBM,QAqBRL,EAAU,CAAED,OAAQ,KArBZ,0DAAF,qDAAC,KAyBX,OACE,iCACE,SAAC,KAAD,KACA,SAACa,EAAD,WACE,SAACC,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,gCACA,UAACC,EAAD,CAAMlB,SAAUZ,EAAO+B,aAAvB,WACE,UAACC,EAAD,YACE,4BACE,kBAAOC,QAAQ,WAAf,2BACA,kBACEC,KAAK,WACLC,KAAK,WACLC,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOa,OAAOV,WAEtBH,EAAOuC,QAAQpC,UAAYH,EAAOwC,OAAOrC,WACxC,0BACE,gCADF,IACkBH,EAAOwC,OAAOrC,SAAU,WAK9C,4BACE,kBAAO8B,QAAQ,kBAAf,mCACA,kBACEC,KAAK,WACLC,KAAK,kBACLC,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOa,OAAOT,kBAEtBJ,EAAOuC,QAAQnC,iBACdJ,EAAOwC,OAAOpC,kBACZ,0BACE,gCADF,IACkBJ,EAAOwC,OAAOpC,gBAAiB,cAKzD,SAACqC,EAAD,WACE,kBAAOP,KAAK,SAASI,MAAM,2BAY3C,IAAMZ,EAAiBgB,EAAAA,GAAAA,IAAH,mHAMdf,EAAee,EAAAA,GAAAA,IAAH,8JASZd,EAAgBc,EAAAA,GAAAA,IAAH,kNASbb,EAAQa,EAAAA,GAAAA,GAAH,mEAKLZ,EAAOY,EAAAA,GAAAA,KAAH,yDAIJV,EAAaU,EAAAA,GAAAA,IAAH,ulBA6BVD,EAASC,EAAAA,GAAAA,IAAH,2U,qBC3KG,SAASC,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,sDCLM,SAASE,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBG,OAAOC,gBAAkB,SAAyBH,EAAGC,GAErE,OADAD,EAAEI,UAAYH,EACPD,GAGFD,EAAgBC,EAAGC,G","sources":["components/Auth/ResetPassword.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axiox from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  let params = useParams();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      password: yup\r\n        .string()\r\n        .min(8, \"Password must have at least 8 characters.\")\r\n        .required(\"Password is required.\"),\r\n      confirmPassword: yup\r\n        .string()\r\n        .when(\"password\", (password, field) =>\r\n          password\r\n            ? field\r\n                .required(\"Confirm password is required.\")\r\n                .oneOf([yup.ref(\"password\", \"must match\")])\r\n            : field\r\n        ),\r\n    }),\r\n    onSubmit: async (values, { resetForm }) => {\r\n      const { password, confirmPassword } = values;\r\n      try {\r\n        const res = await axiox.put(`/api/v1/password/reset/${params.token}`, {\r\n          password,\r\n          confirmPassword,\r\n        });\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          toast(\"Password Update successfull.\");\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/\");\r\n            window.location.reload();\r\n          }, 3000);\r\n        }\r\n      } catch (err) {\r\n        toast.error(\"Invalid Password Reset Details\");\r\n        console.log(err);\r\n      }\r\n\r\n      resetForm({ values: \"\" });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <LoginContainer>\r\n        <ContainerTop>\r\n          <FormContainer>\r\n            <Title> Reset Password </Title>\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <InputGroup>\r\n                <div>\r\n                  <label htmlFor=\"password\">New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                  />\r\n                  {formik.touched.password && formik.errors.password && (\r\n                    <p>\r\n                      <span>i</span> {formik.errors.password}{\" \"}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmPassword}\r\n                  />\r\n                  {formik.touched.confirmPassword &&\r\n                    formik.errors.confirmPassword && (\r\n                      <p>\r\n                        <span>i</span> {formik.errors.confirmPassword}{\" \"}\r\n                      </p>\r\n                    )}\r\n                </div>\r\n              </InputGroup>\r\n              <Button>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n        </ContainerTop>\r\n      </LoginContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\nconst ContainerTop = styled.div`\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius: 5px;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 2.5rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst InputGroup = styled.div`\r\n  div {\r\n    margin: 1rem 0;\r\n    & label {\r\n      font-size: 1.3rem;\r\n      color: var(--text-secondary);\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      height: 3rem;\r\n      &:focus {\r\n        border: none;\r\n        outline: none;\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\r\n          rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\r\n      }\r\n    }\r\n    p {\r\n      font-size: 1.1rem;\r\n      span {\r\n        font-style: italic;\r\n        color: tomato;\r\n        margin: 1.3rem 0.4rem 0 0;\r\n        font-weight: 700;\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  & input {\r\n    font-size: 1.3rem;\r\n    border: none;\r\n    background-color: var(--bg-primary);\r\n    padding: 1rem 2rem;\r\n    border-radius: 5px;\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: #ff6347f6;\r\n    }\r\n  }\r\n`;\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}"],"names":["navigate","useNavigate","params","useParams","formik","useFormik","initialValues","password","confirmPassword","validationSchema","yup","min","required","when","field","oneOf","onSubmit","values","resetForm","axiox","token","res","console","log","status","toast","setTimeout","window","location","reload","LoginContainer","ContainerTop","FormContainer","Title","Form","handleSubmit","InputGroup","htmlFor","type","name","onChange","handleChange","value","touched","errors","Button","styled","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__"],"sourceRoot":""}