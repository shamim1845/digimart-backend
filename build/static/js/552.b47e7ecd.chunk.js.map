{"version":3,"file":"static/js/552.b47e7ecd.chunk.js","mappings":"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","sources":["components/account/profile/UpdateProfile.jsx","components/utils/formik/SelectBox.jsx","components/utils/formik/TextInput.jsx","components/utils/helperFunction/MediaUpload.js","components/utils/reUseableComponents/Buttons.jsx","components/utils/reUseableComponents/Title.jsx","components/utils/validationUtils/ValidationError.jsx","redux/user/userSelector.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../javascript/esm|/media/shamim/Document/MERN ECOMMERCR PROJECT/my-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport MediaUpload from \"../../utils/helperFunction/MediaUpload\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Title from \"../../utils/reUseableComponents/Title\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserInfo } from \"../../../redux/user/userSelector\";\r\nimport { fetchAsyncUser } from \"../../../redux/user/userSlice\";\r\nimport Button from \"../../utils/reUseableComponents/Buttons\";\r\nimport TextInput from \"../../utils/formik/TextInput\";\r\nimport SelectBox from \"../../utils/formik/SelectBox\";\r\n\r\nconst MyProfile = () => {\r\n  const [isProfile, setIsProfile] = useState(false);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [btnDissable, setBtnDissable] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserInfo);\r\n\r\n  return (\r\n    <UpdateProfileContainer>\r\n      <Title\r\n        variant=\"h1\"\r\n        text=\"Update Profile\"\r\n        style={{ textAlign: \"center\" }}\r\n      />\r\n\r\n      <Content>\r\n        <UserImage>\r\n          <img\r\n            onClick={() => setIsProfile(true)}\r\n            src={user?.avatar?.url}\r\n            alt=\"profile_picture\"\r\n          />\r\n        </UserImage>\r\n\r\n        {isProfile && (\r\n          <AvatarPicker>\r\n            <label htmlFor=\"profilePic\">Profile Picture</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"profilePic\"\r\n              onChange={(e) => setProfilePic(e.target.files)}\r\n            />\r\n          </AvatarPicker>\r\n        )}\r\n        <br />\r\n        <Formik\r\n          initialValues={{\r\n            name: user?.name || \"\",\r\n            email: user?.email || \"\",\r\n            mobile: user?.mobile || \"\",\r\n            birthday: user?.birthday || \"\",\r\n            gender: user?.gender || \"\",\r\n          }}\r\n          validationSchema={yup.object({\r\n            name: yup\r\n              .string()\r\n              .required(\"Name is required.\")\r\n              .min(3, \"Name must have at least 3 characters.\"),\r\n            email: yup\r\n              .string()\r\n              .required(\"Email is required.\")\r\n              .email(\"Email must be a valid email.\"),\r\n            mobile: yup.string().max(11).required(\"Phone Number is required.\"),\r\n            birthday: yup.string().required(\"Date of birth is required.\"),\r\n            gender: yup.string().required(\"Gender  is required.\"),\r\n          })}\r\n          onSubmit={(values, { resetForm }) => {\r\n            setBtnDissable(true);\r\n            const { name, email, mobile, birthday, gender } = values;\r\n\r\n            function updateProfile(mediaUrls = []) {\r\n              const avatar = {\r\n                public_id: mediaUrls[0]?.public_id\r\n                  ? mediaUrls[0]?.public_id\r\n                  : user.avatar.public_id,\r\n                url: mediaUrls[0]?.secure_url\r\n                  ? mediaUrls[0]?.secure_url\r\n                  : user.avatar.url,\r\n              };\r\n\r\n              axios\r\n                .put(`/api/v1/profile/update`, {\r\n                  name,\r\n                  email,\r\n                  avatar,\r\n                  mobile,\r\n                  birthday,\r\n                  gender,\r\n                })\r\n                .then((res) => {\r\n                  if (res.status === 200 && res.data.success) {\r\n                    toast.success(\"Profile update Sucessfully.\");\r\n                    dispatch(fetchAsyncUser());\r\n\r\n                    setTimeout(() => {\r\n                      navigate(\"/account/myprofile\");\r\n                    }, 2000);\r\n                  } else {\r\n                    toast.info(res.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err.message);\r\n                  toast.error(err.message);\r\n                });\r\n            }\r\n\r\n            if (profilePic) {\r\n              MediaUpload(profilePic, \"user\").then((res) => {\r\n                updateProfile(res);\r\n              });\r\n            } else {\r\n              updateProfile();\r\n            }\r\n          }}\r\n          enableReinitialize\r\n        >\r\n          <Form>\r\n            <TextInput\r\n              label=\"Full Name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter your name\"\r\n            />\r\n            <TextInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <TextInput\r\n              label=\"Phone\"\r\n              type=\"tel\"\r\n              name=\"mobile\"\r\n              placeholder=\"Enter your phone number\"\r\n            />\r\n            <TextInput label=\"Birthday\" type=\"date\" name=\"birthday\" />\r\n            <SelectBox label=\"Gender\" name=\"gender\">\r\n              <option hidden>Choose</option>\r\n              <option value={\"male\"}>Male</option>\r\n              <option value={\"female\"}>Female</option>\r\n              <option value={\"other\"}>Other</option>\r\n            </SelectBox>\r\n            <br />\r\n            <Button\r\n              text={\"Update Profile\"}\r\n              type=\"submit\"\r\n              disabled={btnDissable}\r\n            />\r\n          </Form>\r\n        </Formik>\r\n      </Content>\r\n    </UpdateProfileContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n\r\nconst UpdateProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  padding: 2rem;\r\n  margin-bottom: 3rem;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--shadow-1);\r\n  padding: 5rem;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    box-shadow: var(--shadow-3);\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nconst UserImage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n  &:hover {\r\n  }\r\n\r\n  img {\r\n    width: 13rem;\r\n    height: 13rem;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AvatarPicker = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst SelectBox = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <SelectContainer>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </SelectContainer>\n  );\n};\n\nexport default SelectBox;\n\nconst SelectContainer = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  select {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    border-radius: 2px;\n    font-size: 1.3rem;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    }\n\n    option {\n      &:checked {\n        color: tomato;\n      }\n    }\n  }\n`;\n","import { useField } from \"formik\";\nimport styled from \"styled-components\";\nimport ValidationError from \"../validationUtils/ValidationError\";\n\nconst TextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <InputGroup>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && <ValidationError message={meta.error} />}\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n\nconst InputGroup = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n\n  label {\n    color: var(--text-secondary);\n    font-size: 1.3rem;\n  }\n  input {\n    background: #fff;\n    color: var(--text-primary);\n    width: 100%;\n    height: 4rem;\n    padding: 0 1rem;\n    margin-top: 0.5rem;\n    border: none;\n    outline: none;\n    font-size: 1.3rem;\n    border-radius: 2px;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n      rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    &:focus {\n      box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n      color: #000;\n    }\n    &::placeholder {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import axios from \"axios\";\r\n\r\nconst MediaUpload = async (files, folder) => {\r\n  // Convert files Object to Array\r\n  const filesArr = [];\r\n  for (let key = 0; key < files.length; key++) {\r\n    filesArr.push(files[key]);\r\n  }\r\n\r\n  // Convert all files in base 64\r\n  const reader_files = filesArr.map((file) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (res) => {\r\n          const public_id = file.name.split(\".\")[0];\r\n\r\n          resolve({\r\n            base64: res.target.result,\r\n            options: {\r\n              public_id: public_id,\r\n              tags: [public_id],\r\n            },\r\n          });\r\n        };\r\n      } catch (error) {\r\n        console.error(error);\r\n        reject(error?.message);\r\n      }\r\n    });\r\n  });\r\n\r\n  const images = await Promise.all(reader_files);\r\n\r\n  // Upload images on Cloudinary\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"/api/v1/media/uploadImages\", {\r\n        images,\r\n        folder,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data.urls);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default MediaUpload;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = ({ text, children, ...rest }) => {\n  return (\n    <ButtonDefault {...rest}>\n      <span>{text}</span> {children}\n    </ButtonDefault>\n  );\n};\n\nexport default Button;\n\nconst ButtonDefault = styled.button`\n  border: none;\n  color: var(--text-primary);\n  background-color: tomato;\n  padding: 1rem 3rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #dd5a43;\n    color: #f1f1f1;\n  }\n  &:disabled {\n    background-color: #dd5a43d3;\n    cursor: not-allowed;\n    color: var(--text-primary);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = ({ variant = \"h1\", text, style }) => {\n  return (\n    <Container>\n      {variant === (\"h2\" || \"H2\") && <h2 style={style}>{text}</h2>}\n      {variant === (\"h3\" || \"H3\") && <h3 style={style}>{text}</h3>}\n      {variant === (\"h1\" || \"H1\") && <h1 style={style}>{text}</h1>}\n      {variant === (\"h4\" || \"H4\") && <h4 style={style}>{text}</h4>}\n    </Container>\n  );\n};\n\nexport default Title;\n\nconst Container = styled.div`\n  color: var(--text-primary);\n\n  h1 {\n    font-size: 2.4rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ValidationError = ({ message }) => {\n  return (\n    <Container className=\"error\">\n      <span>i</span> {message}\n    </Container>\n  );\n};\n\nexport default ValidationError;\n\nconst Container = styled.div`\n  font-size: 1.1rem;\n  padding: 0.5rem 0;\n  span {\n    font-style: italic;\n    color: tomato;\n    margin-right: 0.3rem;\n    font-weight: 700;\n    font-size: 1.1rem;\n  }\n`;\n","import { createSelector } from \"reselect\";\n\nexport const selectAuthenticated = (state) => state.user.authenticated;\nexport const selectUserInfo = (state) => state.user.userInfo;\nexport const selectCartItems = (state) => state.user.cartItems;\nexport const selectFavouriteItems = (state) => state.user.favouriteItems;\nexport const selectCurrency = (state) => state.user.currency;\n\n// Memoized version of selector\nexport const selectMemoCartItemQuantity = () =>\n  createSelector(\n    selectCartItems,\n    (state, productId) => productId,\n    (cartItems, productId) => {\n      const currentItem = cartItems?.find((item) => {\n        return item.product?._id === productId;\n      });\n\n      if (currentItem) {\n        return currentItem?.quantity;\n      }\n\n      return 0;\n    }\n  );\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}"],"names":["useState","isProfile","setIsProfile","profilePic","setProfilePic","btnDissable","setBtnDissable","navigate","useNavigate","dispatch","useDispatch","user","useSelector","selectUserInfo","UpdateProfileContainer","variant","text","style","textAlign","Content","UserImage","onClick","src","avatar","url","alt","AvatarPicker","htmlFor","type","name","onChange","e","target","files","initialValues","email","mobile","birthday","gender","validationSchema","yup","required","min","max","onSubmit","values","resetForm","updateProfile","mediaUrls","public_id","secure_url","axios","then","res","status","data","success","toast","fetchAsyncUser","setTimeout","message","catch","err","console","log","MediaUpload","enableReinitialize","label","placeholder","hidden","value","disabled","styled","props","useField","field","meta","SelectContainer","id","touched","error","InputGroup","folder","filesArr","key","length","push","reader_files","map","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","base64","result","options","tags","all","images","urls","children","rest","ButtonDefault","Container","className","selectAuthenticated","state","authenticated","userInfo","selectCurrency","currency","_assertThisInitialized","self","ReferenceError","_objectWithoutProperties","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys","keys","_setPrototypeOf","o","p","setPrototypeOf","__proto__"],"sourceRoot":""}